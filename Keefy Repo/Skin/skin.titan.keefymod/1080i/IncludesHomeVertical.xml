<?xml version="1.0" encoding="UTF-8"?>
<includes>

    <include name="VerticalHome">
        <!-- widgets -->
        <control type="group">
            <!-- fade when submenu active -->
            <animation type="Conditional" condition="[SubString(Window(Home).Property(submenu),show) | Control.HasFocus(4444)]">
                <effect type="fade" start="100" end="20" time="150" delay="0" tween="cubic" easing="inout" />
            </animation>
            
            <!-- infopanel -->
            <control type="group" id="77551">
                <visible>!Skin.HasSetting(VerticalHomeMultiWidget)</visible>
                <visible>!Skin.HasSetting(HideWidgetDetailsPanel)</visible>
                <visible>SubString(Control.GetLabel(17888), poster) | SubString(Control.GetLabel(17888), square)</visible>
                <visible>ControlGroup(77777).HasFocus() + !StringCompare(Container(300).ListItem.Property(widget),submenuaswidget)</visible>
                <visible>!Window.IsActive(DialogKaiToast.xml) + !Window.IsActive(DialogExtendedProgressBar.xml) + !Control.IsVisible(88888)</visible>
                <control type="image">
                    <right>0</right>
                    <top>0</top>
                    <width>1355</width>
                    <texture border="15">diffuse/bgpanel.png</texture>
                    <visible>!Skin.HasSetting(HideWidgetPanelBackground)</visible>
                    <colordiffuse>$VAR[ViewDetailsPanelColor]</colordiffuse>
                    <aspectratio>stretch</aspectratio>
                    <height>1300</height>
                </control>
                <control type="label">
                    <right>65</right>
                    <top>10</top>
                    <width>1270</width>
                    <height>40</height>
                    <label fallback="19055">$VAR[HomeMenuWidgetInfoLabel]</label>
                    <textcolor>$INFO[Skin.String(ViewDetailsHighlightTextColor)]</textcolor>
                    <shadowcolor>$INFO[Skin.String(ViewDetailsHighlightTextShadowColor)]</shadowcolor>
                    <align>left</align>
                    <font>Reg28</font>
                </control>
                <control type="textbox">
                    <right>65</right>
                    <top>50</top>
                    <width>1270</width>
                    <height>166</height>
                    <label fallback="19055">$VAR[HomeMenuWidgetInfoPlotAlt]</label>
                    <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                    <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                    <align>justify</align>
                    <font>Reg24</font>
                    <visible>!SubString(Control.GetLabel(17888),square)</visible>
                </control>
                <control type="textbox">
                    <right>65</right>
                    <top>50</top>
                    <width>1270</width>
                    <height>118</height>
                    <label fallback="19055">$VAR[HomeMenuWidgetInfoPlotAlt]</label>
                    <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                    <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                    <align>justify</align>
                    <font>Reg24</font>
                    <visible>SubString(Control.GetLabel(17888),square)</visible>
                </control>
            </control>
            <control type="group" id="77551">
                <visible>!Skin.HasSetting(VerticalHomeMultiWidget)</visible>
                <visible>!Skin.HasSetting(HideWidgetDetailsPanel)</visible>
                <visible>SubString(Control.GetLabel(17888), landscape)</visible>
                <visible>ControlGroup(77777).HasFocus() + !StringCompare(Container(300).ListItem.Property(widget),submenuaswidget)</visible>
                <visible>!Window.IsActive(DialogKaiToast.xml) + !Window.IsActive(DialogExtendedProgressBar.xml) + !Control.IsVisible(88888)</visible>
                <control type="image">
                    <right>0</right>
                    <top>0</top>
                    <width>1155</width>
                    <texture border="15">diffuse/bgpanel.png</texture>
                    <visible>!Skin.HasSetting(HideWidgetPanelBackground)</visible>
                    <colordiffuse>$VAR[ViewDetailsPanelColor]</colordiffuse>
                    <aspectratio>stretch</aspectratio>
                    <height>1300</height>
                </control>
                <control type="label">
                    <right>65</right>
                    <top>10</top>
                    <width>1070</width>
                    <height>40</height>
                    <label fallback="19055">$VAR[HomeMenuWidgetInfoLabel]</label>
                    <textcolor>$INFO[Skin.String(ViewDetailsHighlightTextColor)]</textcolor>
                    <shadowcolor>$INFO[Skin.String(ViewDetailsHighlightTextShadowColor)]</shadowcolor>
                    <align>left</align>
                    <font>Reg28</font>
                </control>
                <control type="textbox">
                    <right>65</right>
                    <top>50</top>
                    <width>1070</width>
                    <height>166</height>
                    <label fallback="19055">$VAR[HomeMenuWidgetInfoPlotAlt]</label>
                    <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                    <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                    <align>justify</align>
                    <font>Reg24</font>
                </control>
            </control>
            <control type="group" id="77551">
                <visible>Skin.HasSetting(VerticalHomeMultiWidget)</visible>
                <visible>!Skin.HasSetting(HideWidgetDetailsPanel)</visible>
                <visible>ControlGroup(77777).HasFocus() + !StringCompare(Container(300).ListItem.Property(widget),submenuaswidget)</visible>
                <visible>!Window.IsActive(DialogKaiToast.xml) + !Window.IsActive(DialogExtendedProgressBar.xml) + !Control.IsVisible(88888)</visible>
                <control type="image">
                    <right>0</right>
                    <top>0</top>
                    <width>1355</width>
                    <texture border="15">diffuse/bgpanel.png</texture>
                    <visible>!Skin.HasSetting(HideWidgetPanelBackground)</visible>
                    <colordiffuse>$VAR[ViewDetailsPanelColor]</colordiffuse>
                    <aspectratio>stretch</aspectratio>
                    <height>1300</height>
                </control>
                <control type="textbox">
                    <right>65</right>
                    <top>10</top>
                    <width>1270</width>
                    <height>145</height>
                    <label fallback="19055">$VAR[HomeMenuWidgetInfoLabel][CR]$VAR[HomeMenuWidgetInfoPlotAlt]</label>
                    <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                    <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                    <align>justify</align>
                    <font>Reg24</font>
                </control>
            </control>
            
            <include condition="!Skin.HasSetting(DisableAllWidgets) + !Skin.HasSetting(VerticalHomeMultiWidget)">VerticalHomeWidgetsNormal</include>
            <include condition="!Skin.HasSetting(DisableAllWidgets) + Skin.HasSetting(VerticalHomeMultiWidget)">skinshortcuts-template-VerticalHomeAdvancedWidgets</include>
        </control>
        
        <control type="group">
            <!-- fade when widget active -->
            <animation type="Conditional" condition="Control.IsVisible(77551)">
                <effect type="fade" start="100" end="80" time="150" delay="0" tween="cubic" easing="inout" />
            </animation>
            <include condition="Skin.String(HomeLayout, simplever) | Skin.String(HomeLayout, simplever_tiles)">HomeSimpleVertical</include>
            <include condition="Skin.String(HomeLayout, verticalbig)">HomeBigVertical</include>
        </control>
        
        <!--RSS -->			
        <control type="rss">	
            <description>RSS Feed</description>
            <right>60</right>
            <bottom>0</bottom>
            <width>1400</width>
            <height>50</height>
            <font>Light28</font>
            <urlset>1</urlset>
            <titlecolor>$INFO[Skin.String(GeneralHighlightTextColor)]</titlecolor>
            <headlinecolor>$INFO[Skin.String(FooterTextColor)]</headlinecolor>
            <textcolor>$INFO[Skin.String(GeneralHighlightTextColor)]</textcolor>
            <visible>system.getbool(lookandfeel.enablerssfeeds) + !Control.IsVisible(77551)() + IsEmpty(Container(300).ListItem.Property(infoline))</visible>
            <visible>![Skin.HasSetting(VerticalHomeMultiWidget) + !IsEmpty(Container(300).ListItem.Property(widget.2))]</visible>
        </control>
        <control type="label">	
            <description>InfoLine</description>
            <right>60</right>
            <bottom>5</bottom>
            <width>1400</width>
            <height>50</height>
            <font>Light28</font>
            <font>Reg28</font>
            <align>right</align>
            <aligny>center</aligny>
            <label>[UPPERCASE]$VAR[infolinevar][/UPPERCASE]</label>
            <textcolor>$INFO[Skin.String(FooterTextColor)]</textcolor>
            <visible>!Window.IsVisible(DialogButtonMenu.xml)</visible>
            <visible>![Skin.HasSetting(VerticalHomeMultiWidget) + !IsEmpty(Container(300).ListItem.Property(widget.2))]</visible>
        </control>
        
    </include>
    
    <!-- Simple Vertical Home -->
    <include name="HomeSimpleVertical">
        <control type="group">

            <!--Panel-->
            <control type="image">
                <posy>0</posy>
                <posx>0</posx>
                <width>400</width>
                <height>100%</height>
                <texture>colors/color_white.png</texture>
                <visible>!Skin.HasSetting(HideWidgetPanelBackground)</visible>
                <colordiffuse>$VAR[ViewDetailsPanelColor]</colordiffuse>
                <aspectratio>stretch</aspectratio>
            </control>

            <!--submenu normal-->
            <include condition="!Skin.HasSetting(DisableAllSubmenus) + !Skin.HasSetting(VerticalHomeInlineSubmenu)">HomeSimpleVerticalSubMenuNormal</include>

            <!-- Main menu -->
            <control type="image">
                <!-- arrow up -->
                <animation effect="fade" start="100" end="50" tween="sine" easing="inout" time="800" pulse="true" reversible="false" condition="true">Conditional</animation>
                <left>355</left>
                <posy>110</posy>
                <width>25</width>
                <height>60</height>
                <aspectratio>keep</aspectratio>
                <texture>home/home_arrow_up.png</texture>
                <colordiffuse>$INFO[Skin.String(ViewDetailsListItemTextColor)]</colordiffuse>
                <visible>Container(300).HasPrevious + !Skin.HasSetting(HideHomeTileIndicators)</visible>
            </control>
            <control type="image">
                <!-- arrow down -->
                <animation effect="fade" start="100" end="50" tween="sine" easing="inout" time="800" pulse="true" reversible="false" condition="true">Conditional</animation>
                <left>355</left>
                <posy>970</posy>
                <width>25</width>
                <height>60</height>
                <aspectratio>keep</aspectratio>
                <texture>home/home_arrow_down.png</texture>
                <colordiffuse>$INFO[Skin.String(ViewDetailsListItemTextColor)]</colordiffuse>
                <visible>Container(300).HasNext + !Skin.HasSetting(HideHomeTileIndicators)</visible>
            </control>
            <control type="list" id="300">
                <animation effect="fade" time="200" start="100" end="70" reversible="true" condition="!Control.HasFocus(300)">Conditional</animation>
                <animation effect="fade" time="200" start="100" end="20" reversible="true" condition="Control.HasFocus(4444) + Skin.HasSetting(VerticalHomeInlineSubmenu)">Conditional</animation>
                <posx>10</posx>
                <posy>160</posy>
                <width>375</width>
                <include condition="Skin.String(HomeLayout, simplever_tiles)">HomeSimpleVertical_AltHeight</include>
                <height>800</height>
                <onup condition="!Skin.HasSetting(ShowProfile)">300</onup>
                <onup condition="Skin.HasSetting(ShowProfile)">Control.SetFocus(890,0)</onup>
                <ondown>300</ondown>
                <onleft condition="!Skin.HasSetting(DisablePowerMenu)">2</onleft>
                <onright condition="!IntegerGreaterThan(Container(4444).NumItems,0) | Skin.HasSetting(OpenSubMenuOnClick)">77777</onright>	
                <onright condition="IntegerGreaterThan(Container(4444).NumItems,0) + !Skin.HasSetting(OpenSubMenuOnClick)">SetProperty(submenu,show,home)</onright>
                <onright condition="IntegerGreaterThan(Container(4444).NumItems,0) + !Skin.HasSetting(OpenSubMenuOnClick)">Control.SetFocus(4444,0)</onright>
                <scrolltime tween="quadratic">200</scrolltime>
                <movement>0</movement>
                <preloaditems>4</preloaditems>
                <itemlayout height="80" width="370" condition="!Skin.String(HomeLayout, simplever_tiles)">
                    <control type="label">
                        <right>0</right>
                        <posy>0</posy>
                        <width>350</width>
                        <height>80</height>
                        <align>right</align>
                        <aligny>center</aligny>
                        <textcolor>$INFO[Skin.String(ViewDetailsListItemTextColor)]</textcolor>
                        <focusedcolor>$INFO[Skin.String(ViewDetailsListItemTextColor)]</focusedcolor>
                        <selectedcolor>$INFO[Skin.String(ViewDetailsListItemTextColor)]</selectedcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <font>Reg34</font>
                        <scroll>false</scroll>
                    </control>
                </itemlayout>
                <itemlayout height="170" width="375" condition="Skin.String(HomeLayout, simplever_tiles)">
                    <control type="group">
                        <width>375</width>
                        <height>150</height>
                        <control type="image">
                            <texture background="true" diffuse="home/home_matte2.png" fallback="special://skin/extras/hometiles/addons.png">$INFO[ListItem.Icon]</texture>
                            <aspectratio scalediffuse="false" align="center" aligny="top">scale</aspectratio>
                            <bordersize>5</bordersize>
                        </control>
                        <control type="image">
                            <texture>home/home_overlay2.png</texture>
                            <bordersize>5</bordersize>
                            <colordiffuse>$VAR[ViewDetailsPanelColor]</colordiffuse>
                            <visible>!Skin.HasSetting(NoTitleOnHomeMenuTiles) + !StringCompare(ListItem.Property(disableLabel), disable)</visible>
                        </control>
                        <control type="label">
                            <bottom>8</bottom>
                            <left>10</left>
                            <width>350</width>
                            <height>40</height>
                            <align>center</align>
                            <info>ListItem.Label</info>
                            <font>Reg38</font>
                            <shadowcolor>black</shadowcolor>
                            <visible>!Skin.HasSetting(NoTitleOnHomeMenuTiles) + !StringCompare(ListItem.Property(disableLabel), disable)</visible>
                        </control>
                    </control>
                </itemlayout>
                <focusedlayout height="170" width="375" condition="Skin.String(HomeLayout, simplever_tiles) + !Skin.HasSetting(VerticalHomeInlineSubmenu)">
                    <include>HomeSimpleVertical_FocusedMainMenuItem_tile</include>
                </focusedlayout>
                <focusedlayout height="80" width="370" condition="[StringCompare(Container(4444).NumItems,0) | IsEmpty(Container(4444).NumItems) | !StringCompare(Window(Home).Property(submenu),show) | !Skin.HasSetting(VerticalHomeInlineSubmenu)] + !Skin.String(HomeLayout, simplever_tiles)">
                    <include>HomeSimpleVertical_FocusedMainMenuItem</include>
                </focusedlayout>
                
                <focusedlayout height="140" width="370" condition="StringCompare(Window(Home).Property(submenu),show) + StringCompare(Container(4444).NumItems,1) + Skin.HasSetting(VerticalHomeInlineSubmenu) + !Skin.String(HomeLayout, simplever_tiles)">
                    <include>HomeSimpleVertical_FocusedMainMenuItem</include>
                </focusedlayout>
                <focusedlayout height="205" width="370" condition="StringCompare(Window(Home).Property(submenu),show) + StringCompare(Container(4444).NumItems,2) + Skin.HasSetting(VerticalHomeInlineSubmenu) + !Skin.String(HomeLayout, simplever_tiles)">
                    <include>HomeSimpleVertical_FocusedMainMenuItem</include>
                </focusedlayout>
                <focusedlayout height="270" width="370" condition="StringCompare(Window(Home).Property(submenu),show) + StringCompare(Container(4444).NumItems,3) + Skin.HasSetting(VerticalHomeInlineSubmenu) + !Skin.String(HomeLayout, simplever_tiles)">
                    <include>HomeSimpleVertical_FocusedMainMenuItem</include>
                </focusedlayout>
                <focusedlayout height="335" width="370" condition="StringCompare(Window(Home).Property(submenu),show) + StringCompare(Container(4444).NumItems,4) + Skin.HasSetting(VerticalHomeInlineSubmenu) + !Skin.String(HomeLayout, simplever_tiles)">
                    <include>HomeSimpleVertical_FocusedMainMenuItem</include>
                </focusedlayout>
                <focusedlayout height="380" width="370" condition="StringCompare(Window(Home).Property(submenu),show) + StringCompare(Container(4444).NumItems,5) + Skin.HasSetting(VerticalHomeInlineSubmenu) + !Skin.String(HomeLayout, simplever_tiles)">
                    <include>HomeSimpleVertical_FocusedMainMenuItem</include>
                </focusedlayout>
                <focusedlayout height="460" width="370" condition="StringCompare(Window(Home).Property(submenu),show) + IntegerGreaterThan(Container(4444).NumItems,5) + Skin.HasSetting(VerticalHomeInlineSubmenu) + !Skin.String(HomeLayout, simplever_tiles)">
                    <include>HomeSimpleVertical_FocusedMainMenuItem</include>
                </focusedlayout>
                <focusedlayout height="510" width="370" condition="StringCompare(Window(Home).Property(submenu),show) + IntegerGreaterThan(Container(4444).NumItems,5) + Skin.HasSetting(VerticalHomeInlineSubmenu) + Skin.String(HomeLayout, simplever_tiles)">
                    <include>HomeSimpleVertical_FocusedMainMenuItem_tile</include>
                </focusedlayout>
                <focusedlayout height="450" width="370" condition="StringCompare(Window(Home).Property(submenu),show) + StringCompare(Container(4444).NumItems,5) + Skin.HasSetting(VerticalHomeInlineSubmenu) + Skin.String(HomeLayout, simplever_tiles)">
                    <include>HomeSimpleVertical_FocusedMainMenuItem_tile</include>
                </focusedlayout>
                <focusedlayout height="450" width="310" condition="StringCompare(Window(Home).Property(submenu),show) + StringCompare(Container(4444).NumItems,4) + Skin.HasSetting(VerticalHomeInlineSubmenu) + Skin.String(HomeLayout, simplever_tiles)">
                    <include>HomeSimpleVertical_FocusedMainMenuItem_tile</include>
                </focusedlayout>
                <focusedlayout height="390" width="370" condition="StringCompare(Window(Home).Property(submenu),show) + StringCompare(Container(4444).NumItems,4) + Skin.HasSetting(VerticalHomeInlineSubmenu) + Skin.String(HomeLayout, simplever_tiles)">
                    <include>HomeSimpleVertical_FocusedMainMenuItem_tile</include>
                </focusedlayout>
                <focusedlayout height="330" width="370" condition="StringCompare(Window(Home).Property(submenu),show) + StringCompare(Container(4444).NumItems,3) + Skin.HasSetting(VerticalHomeInlineSubmenu) + Skin.String(HomeLayout, simplever_tiles)">
                    <include>HomeSimpleVertical_FocusedMainMenuItem_tile</include>
                </focusedlayout>
                <focusedlayout height="270" width="370" condition="StringCompare(Window(Home).Property(submenu),show) + StringCompare(Container(4444).NumItems,2) + Skin.HasSetting(VerticalHomeInlineSubmenu) + Skin.String(HomeLayout, simplever_tiles)">
                    <include>HomeSimpleVertical_FocusedMainMenuItem_tile</include>
                </focusedlayout>
                <focusedlayout height="210" width="370" condition="StringCompare(Window(Home).Property(submenu),show) + StringCompare(Container(4444).NumItems,1) + Skin.HasSetting(VerticalHomeInlineSubmenu) + Skin.String(HomeLayout, simplever_tiles)">
                    <include>HomeSimpleVertical_FocusedMainMenuItem_tile</include>
                </focusedlayout>
                <content><include>skinshortcuts-mainmenu</include></content>
            </control>
            
            <!--submenu inline-->
            <include condition="!Skin.HasSetting(DisableAllSubmenus) + Skin.HasSetting(VerticalHomeInlineSubmenu)">HomeSimpleVerticalSubMenuInline</include>
            <!-- Power button -->
            <control type="button" id="2">
                <description>powerbutton</description>
                <posx>20</posx>
                <bottom>5</bottom>
                <width>60</width>
                <height>60</height>
                <onup>300</onup>
                <onright>300</onright>
                <onleft>300</onleft>
                <texturefocus colordiffuse="$INFO[Skin.String(ButtonFocusColor)]">common/shutdown2.png</texturefocus>
                <texturenofocus colordiffuse="white">common/shutdown2.png</texturenofocus>
                <onclick>ActivateWindow(111)</onclick>
                <onfocus>ActivateWindow(111)</onfocus>
                <include>animation_fade_visible_hidden</include>
                <visible>!Skin.HasSetting(EnableTouchSupport) + !Skin.HasSetting(DisablePowerMenu)</visible>
                <visible allowhiddenfocus="true">!Skin.HasSetting(HidePowerMenu)</visible>
            </control>
            <!-- touchscreen support -->
            <include condition="Skin.HasSetting(EnableTouchSupport)">TouchControlsFooter</include>
        
        </control>
    </include>
	<include name="HomeSimpleVertical_FocusedMainMenuItem">
		<!-- menu label -->
		<control type="label">
			<right>0</right>
			<width>350</width>
			<height>80</height>
			<align>right</align>
			<aligny>center</aligny>
			<textcolor>$VAR[ViewDetailsFocusColor]</textcolor>
			<label>[B]$INFO[ListItem.Label][/B]</label>
			<font>Reg38</font>
            <scroll>true</scroll>
            <visible>Control.HasFocus(300)</visible>
            <animation effect="zoom" start="80" end="102" center="left" time="150" tween="elastic" easing="inout" pulse="false" condition="Skin.HasSetting(Vertical_Home_Animation)">Focus</animation>
		</control>
        <control type="label">
			<right>0</right>
			<width>350</width>
			<height>80</height>
			<align>right</align>
			<aligny>center</aligny>
			<textcolor>$VAR[ViewDetailsFocusColor]</textcolor>
			<label>[B]$INFO[ListItem.Label][/B]</label>
			<font>Reg38</font>
            <scroll>false</scroll>
            <visible>!Control.HasFocus(300)</visible>
            <animation effect="zoom" start="80" end="102" center="left" time="150" tween="elastic" easing="inout" pulse="false" condition="Skin.HasSetting(Vertical_Home_Animation)">Focus</animation>
		</control>
	  <control type="button">
			<visible>false</visible>	
			<onfocus condition="!Skin.HasSetting(AutoShowSubmenu)">SetProperty(submenu,hide,home)</onfocus>
			<onfocus condition="!Skin.HasSetting(DisableAllSubmenus) + Skin.HasSetting(AutoShowSubmenu) + IntegerGreaterThan(Container(4444).NumItems,0)">SetProperty(submenu,show,home)</onfocus>
			<onfocus condition="!Skin.HasSetting(DisableAllSubmenus) + Skin.HasSetting(AutoShowSubmenu) + !IntegerGreaterThan(Container(4444).NumItems,0)">SetProperty(submenu,hide,home)</onfocus>
		</control>
	</include>
	<include name="HomeSimpleVertical_FocusedMainMenuItem_tile">
		<control type="group">
			<width>375</width>
			<height>150</height>
			<control type="image">
				<texture>home/home_matte2.png</texture>
				<colordiffuse>$VAR[ViewDetailsFocusColor]</colordiffuse>
			</control>
			<control type="image">
				<bordersize>5</bordersize>
				<texture background="true" diffuse="home/home_matte2.png" fallback="special://skin/extras/hometiles/addons.png">$INFO[ListItem.Icon]</texture>
				<aspectratio scalediffuse="false" align="center" aligny="top">scale</aspectratio>
			</control>
			<control type="image">
				<texture>home/home_overlay2.png</texture>
				<bordersize>5</bordersize>
				
				<colordiffuse>$VAR[ViewDetailsPanelColor]</colordiffuse>
				<visible>!Skin.HasSetting(NoTitleOnHomeMenuTiles) + !StringCompare(ListItem.Property(disableLabel), disable)</visible>
			</control>
			<control type="label">
				<bottom>8</bottom>
				<left>10</left>
				<width>350</width>
				<height>40</height>
				<align>center</align>
				<info>ListItem.Label</info>
				<font>Reg38</font>
				<textcolor>$VAR[ViewDetailsFocusColor]</textcolor>
				<shadowcolor>black</shadowcolor>
				<visible>!Skin.HasSetting(NoTitleOnHomeMenuTiles) + !StringCompare(ListItem.Property(disableLabel), disable)</visible>
			</control>
			<control type="button">
				<visible>false</visible>	
				<onfocus condition="!Skin.HasSetting(AutoShowSubmenu)">SetProperty(submenu,hide,home)</onfocus>
				<onfocus condition="!Skin.HasSetting(DisableAllSubmenus) + Skin.HasSetting(AutoShowSubmenu) + IntegerGreaterThan(Container(4444).NumItems,0)">SetProperty(submenu,show,home)</onfocus>
				<onfocus condition="!Skin.HasSetting(DisableAllSubmenus) + Skin.HasSetting(AutoShowSubmenu) + !IntegerGreaterThan(Container(4444).NumItems,0)">SetProperty(submenu,hide,home)</onfocus>
			</control>
		</control>
	</include>
    <include name="HomeSimpleVertical_AltHeight">
        <height>850</height>
    </include>
    <include name="HomeSimpleVerticalSubMenuNormal">
		<!-- submenu -->
		<control type="group">
			<posx>420</posx>
			<posy>170</posy>
			<animation type="Conditional" condition="Control.IsVisible(4444)">
				<effect type="fade" start="0" end="100" time="250" delay="0" />
			</animation>
			<animation type="Conditional" condition="!Control.IsVisible(4444)">
				<effect type="fade" start="100" end="0" time="250" delay="0" />
			</animation>
            <animation type="Conditional" condition="!Control.IsVisible(4444)">
				<effect type="slide" start="0" end="0,-700" time="0" delay="0" />
			</animation>
			<animation type="Conditional" condition="IntegerGreaterThan(Container(300).Position,0) + !Skin.String(HomeLayout, simplever_tiles)">
				<effect type="slide" end="0,80" time="0" delay="0" />
			</animation>
			<animation type="Conditional" condition="IntegerGreaterThan(Container(300).Position,1) + !Skin.String(HomeLayout, simplever_tiles)">
				<effect type="slide" end="0,80" time="0" delay="0" />
			</animation>
			<animation type="Conditional" condition="IntegerGreaterThan(Container(300).Position,2) + !Skin.String(HomeLayout, simplever_tiles)">
				<effect type="slide" end="0,80" time="0" delay="0" />
			</animation>
			<animation type="Conditional" condition="IntegerGreaterThan(Container(300).Position,3) + !Skin.String(HomeLayout, simplever_tiles)">
				<effect type="slide" end="0,80" time="0" delay="0" />
			</animation>
			<animation type="Conditional" condition="IntegerGreaterThan(Container(300).Position,4) + !Skin.String(HomeLayout, simplever_tiles)">
				<effect type="slide" end="0,80" time="0" delay="0" />
			</animation>
			<animation type="Conditional" condition="IntegerGreaterThan(Container(300).Position,0) + Skin.String(HomeLayout, simplever_tiles)">
				<effect type="slide" end="0,170" time="0" delay="0" />
			</animation>
			<animation type="Conditional" condition="IntegerGreaterThan(Container(300).Position,1) + Skin.String(HomeLayout, simplever_tiles)">
				<effect type="slide" end="0,170" time="0" delay="0" />
			</animation>
			<animation type="Conditional" condition="IntegerGreaterThan(Container(300).Position,2) + Skin.String(HomeLayout, simplever_tiles)">
				<effect type="slide" end="0,170" time="0" delay="0" />
			</animation>
			<animation type="Conditional" condition="IntegerGreaterThan(Container(300).Position,3) + Skin.String(HomeLayout, simplever_tiles)">
				<effect type="slide" end="0,10" time="0" delay="0" />
			</animation>

			<!--Panel-->
			<control type="image">
				<posy>-10</posy>
				<posx>-20</posx>
				<width>360</width>
				<height>400</height>
				<texture border="5">diffuse/panel.png</texture>
                <visible>!Skin.HasSetting(HideWidgetPanelBackground)</visible>
				<colordiffuse>$VAR[ViewDetailsPanelColor]</colordiffuse>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="list" id="4444">
				<visible allowhiddenfocus="true">[SubString(Window(Home).Property(submenu),show) | control.hasfocus(4444)] + IntegerGreaterThan(Container(4444).NumItems,0)</visible>
				<visible>!Skin.HasSetting(DisableAllSubmenus)</visible>
				<width>310</width>
				<height>380</height>
				<itemgap>3</itemgap>
				<onleft>300</onleft>
				<onleft>ClearProperty(submenu,home)</onleft>
				<onright>ClearProperty(submenu,home)</onright>
				<onright>77777</onright>
				<onup>4444</onup>
				<ondown>4444</ondown>
				<onback>300</onback>
				<onback>ClearProperty(submenu,home)</onback>
				<focusposition>0</focusposition>
				<movement>3</movement>
				<itemlayout width="320" height="65">
                    <control type="label">
                        <posx>10</posx>
                        <width>290</width>
                        <align>left</align>
                        <font>Reg26</font>
                        <height>60</height>
                        <textcolor>$INFO[Skin.String(ViewDetailsListItemTextColor)]</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                    </control>
				</itemlayout>
				<focusedlayout width="320" height="65">
                    <control type="label">
                        <posx>10</posx>
                        <width>290</width>
                        <align>left</align>
                        <font>Reg28</font>
                        <height>60</height>
                        <textcolor>$VAR[ViewDetailsFocusColor]</textcolor>
                        <label>[B]$INFO[ListItem.Label][/B]</label>
                        <scroll>true</scroll>
                    </control>
                    <control type="button">
                        <label>-</label>
                        <visible>false</visible>
                        <onfocus>SetProperty(submenu,show,home)</onfocus>
                    </control>
				</focusedlayout>
				<content>
                    <include condition="!Skin.HasSetting(DisableAllSubmenus)">skinshortcuts-submenu</include>
				</content>
			</control>
		</control>
	</include>
	<include name="HomeSimpleVerticalSubMenuInline">
		<control type="group">
			<posx>25</posx>
			<posy>150</posy>
			<animation type="Conditional" condition="IntegerGreaterThan(Container(300).Position,0) + !Skin.String(HomeLayout, simplever_tiles)">
				<effect type="slide" end="0,80" time="0" delay="0" />
			</animation>
			<animation type="Conditional" condition="IntegerGreaterThan(Container(300).Position,1) + !Skin.String(HomeLayout, simplever_tiles)">
				<effect type="slide" end="0,80" time="0" delay="0" />
			</animation>
			<animation type="Conditional" condition="IntegerGreaterThan(Container(300).Position,2) + !Skin.String(HomeLayout, simplever_tiles)">
				<effect type="slide" end="0,80" time="0" delay="0" />
			</animation>
			<animation type="Conditional" condition="IntegerGreaterThan(Container(300).Position,3) + !Skin.String(HomeLayout, simplever_tiles)">
				<effect type="slide" end="0,80" time="0" delay="0" />
			</animation>
			<animation type="Conditional" condition="IntegerGreaterThan(Container(300).Position,4) + !Skin.String(HomeLayout, simplever_tiles)">
				<effect type="slide" end="0,80" time="0" delay="0" />
			</animation>
			<animation type="Conditional" condition="IntegerGreaterThan(Container(300).Position,5) + !Skin.String(HomeLayout, simplever_tiles)">
				<effect type="slide" end="0,80" time="0" delay="0" />
			</animation>
			<animation type="Conditional" condition="Skin.String(HomeLayout, simplever_tiles)">
				<effect type="slide" end="0,70" time="0" delay="0" />
			</animation>
			<animation type="Conditional" condition="IntegerGreaterThan(Container(300).Position,0) + Skin.String(HomeLayout, simplever_tiles)">
				<effect type="slide" end="0,170" time="0" delay="0" />
			</animation>
			<animation type="Conditional" condition="IntegerGreaterThan(Container(300).Position,1) + Skin.String(HomeLayout, simplever_tiles)">
				<effect type="slide" end="0,170" time="0" delay="0" />
			</animation>
			<animation type="Conditional" condition="IntegerGreaterThan(Container(300).Position,2) + Skin.String(HomeLayout, simplever_tiles)">
				<effect type="slide" end="0,170" time="0" delay="0" />
			</animation>
			<animation type="Conditional" condition="IntegerGreaterThan(Container(300).Position,3) + Skin.String(HomeLayout, simplever_tiles)">
				<effect type="slide" end="0,170" time="0" delay="0" />
			</animation>
			<animation type="Conditional" condition="IntegerGreaterThan(Container(300).Position,4) + Skin.String(HomeLayout, simplever_tiles)">
				<effect type="slide" end="0,170" time="0" delay="0" />
			</animation>
			<animation type="Conditional" condition="IntegerGreaterThan(Container(300).Position,5) + Skin.String(HomeLayout, simplever_tiles)">
				<effect type="slide" end="0,170" time="0" delay="0" />
			</animation>
		
			<control type="list" id="4444">
				<visible allowhiddenfocus="true">[SubString(Window(Home).Property(submenu),show) | control.hasfocus(4444)] + IntegerGreaterThan(Container(4444).NumItems,0)</visible>
				<visible>!Skin.HasSetting(DisableAllSubmenus)</visible>
				<animation effect="slide" end="-580" time="0" condition="!SubString(Window(Home).Property(submenu),show)">Conditional</animation>
				<animation effect="slide" start="0" end="0,80" time="0" reversible="false" condition="Skin.HasSetting(VerticalHomeInlineSubmenu)">Conditional</animation>
				<width>350</width>
				<posx>0</posx>
				<posy>0</posy>
				<height>440</height>
				<itemgap>3</itemgap>
				<onleft>300</onleft>
				<onleft>ClearProperty(submenu,home)</onleft>
				<onright>510</onright>
				<onright>ClearProperty(submenu,home)</onright>
				<onup>ClearProperty(submenu,home)</onup>
				<ondown>ClearProperty(submenu,home)</ondown>
				<onup>300</onup>
				<ondown>Control.Move(300,1)</ondown>
				<ondown>300</ondown>
				<onback>300</onback>
				<onback>ClearProperty(submenu,home)</onback>
				<focusposition>0</focusposition>
				<movement>3</movement>
				<itemlayout width="400" height="65">
                    <control type="label">
                        <posx>0</posx>
                        <width>350</width>
                        <align>right</align>
                        <font>Reg28</font>
                        <height>60</height>
                        <textcolor>$INFO[Skin.String(ViewDetailsListItemTextColor)]</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <animation effect="fade" time="200" start="100" end="60" reversible="true" condition="!Control.HasFocus(4444)">Conditional</animation>
                    </control>
                </itemlayout>
				<focusedlayout width="320" height="65">
                    <control type="label">
                        <posx>0</posx>
                        <width>350</width>
                        <align>right</align>
                        <font>Reg28</font>
                        <height>60</height>
                        <textcolor>$INFO[Skin.String(ViewDetailsListItemTextColor)]</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <visible>!Control.HasFocus(4444)</visible>
                        <animation effect="fade" time="200" start="100" end="60" reversible="true" condition="!Control.HasFocus(4444)">Conditional</animation>
                    </control>
                    <control type="label">
                        <posx>0</posx>
                        <width>350</width>
                        <align>right</align>
                        <font>Reg28</font>
                        <height>60</height>
                        <textcolor>$VAR[ViewDetailsFocusColor]</textcolor>
                        <label>[B]$INFO[ListItem.Label][/B]</label>
                        <scroll>true</scroll>
                        <visible>Control.HasFocus(4444)</visible>
                    </control>
                    <control type="button">
                        <label>-</label>
                        <visible>false</visible>
                        <onfocus>SetProperty(submenu,show,home)</onfocus>
                    </control>
				</focusedlayout>
				<content>
                    <include>skinshortcuts-submenu</include>
				</content>
            </control>
		</control>
    </include>
    
    <!-- Big Vertical Home -->
    <include name="HomeBigVertical">
		<control type="group">
			<top>0</top>
			<animation effect="slide" tween="cubic" time="600" start="-818" end="0" reversible="false">WindowOpen</animation>
			<animation effect="slide" tween="cubic" time="150" start="0" end="-818" reversible="false">WindowClose</animation>
			<animation effect="slide" tween="cubic" time="600" start="-818" end="0" reversible="false">Visible</animation>
			<animation effect="slide" tween="cubic" time="150" start="0" end="-818" reversible="false">Hidden</animation>
			
            <!-- Submenu -->
            <control type="group" id="9001">
				<control type="list" id="4444">
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,120" condition="Container(300).Position(1) + [StringCompare(Container(4444).NumItems,1) | StringCompare(Container(4444).NumItems,2) | StringCompare(Container(4444).NumItems,3) | StringCompare(Container(4444).NumItems,4) | StringCompare(Container(4444).NumItems,5) | StringCompare(Container(4444).NumItems,6) | StringCompare(Container(4444).NumItems,7) | StringCompare(Container(4444).NumItems,8) | StringCompare(Container(4444).NumItems,9) | StringCompare(Container(4444).NumItems,10) | StringCompare(Container(4444).NumItems,11) | StringCompare(Container(4444).NumItems,12) | StringCompare(Container(4444).NumItems,13)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,72" condition="Container(300).Position(1) + [StringCompare(Container(4444).NumItems,14)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,240" condition="Container(300).Position(2) + [StringCompare(Container(4444).NumItems,1) | StringCompare(Container(4444).NumItems,2) | StringCompare(Container(4444).NumItems,3) | StringCompare(Container(4444).NumItems,4) | StringCompare(Container(4444).NumItems,5) | StringCompare(Container(4444).NumItems,6) | StringCompare(Container(4444).NumItems,7) | StringCompare(Container(4444).NumItems,8) | StringCompare(Container(4444).NumItems,9) | StringCompare(Container(4444).NumItems,10) | StringCompare(Container(4444).NumItems,11)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,216" condition="Container(300).Position(2) + [StringCompare(Container(4444).NumItems,12)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,144" condition="Container(300).Position(2) + [StringCompare(Container(4444).NumItems,13)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,72" condition="Container(300).Position(2) + [StringCompare(Container(4444).NumItems,14)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,360" condition="Container(300).Position(3) + [StringCompare(Container(4444).NumItems,1) | StringCompare(Container(4444).NumItems,2) | StringCompare(Container(4444).NumItems,3) | StringCompare(Container(4444).NumItems,4) | StringCompare(Container(4444).NumItems,5) | StringCompare(Container(4444).NumItems,6) | StringCompare(Container(4444).NumItems,7) | StringCompare(Container(4444).NumItems,8) | StringCompare(Container(4444).NumItems,9) | StringCompare(Container(4444).NumItems,10)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,288" condition="Container(300).Position(3) + [StringCompare(Container(4444).NumItems,11)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,216" condition="Container(300).Position(3) + [StringCompare(Container(4444).NumItems,12)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,144" condition="Container(300).Position(3) + [StringCompare(Container(4444).NumItems,13)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,72" condition="Container(300).Position(3) + [StringCompare(Container(4444).NumItems,14)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,480" condition="Container(300).Position(4) + [StringCompare(Container(4444).NumItems,1) | StringCompare(Container(4444).NumItems,2) | StringCompare(Container(4444).NumItems,3) | StringCompare(Container(4444).NumItems,4) | StringCompare(Container(4444).NumItems,5) | StringCompare(Container(4444).NumItems,6) | StringCompare(Container(4444).NumItems,7) | StringCompare(Container(4444).NumItems,8)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,432" condition="Container(300).Position(4) + [StringCompare(Container(4444).NumItems,9)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,360" condition="Container(300).Position(4) + [StringCompare(Container(4444).NumItems,10)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,288" condition="Container(300).Position(4) + [StringCompare(Container(4444).NumItems,11)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,216" condition="Container(300).Position(4) + [StringCompare(Container(4444).NumItems,12)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,144" condition="Container(300).Position(4) + [StringCompare(Container(4444).NumItems,13)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,72" condition="Container(300).Position(4) + [StringCompare(Container(4444).NumItems,14)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,600" condition="Container(300).Position(5) + [StringCompare(Container(4444).NumItems,1) | StringCompare(Container(4444).NumItems,2) | StringCompare(Container(4444).NumItems,3) | StringCompare(Container(4444).NumItems,4) | StringCompare(Container(4444).NumItems,5) | StringCompare(Container(4444).NumItems,6)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,576" condition="Container(300).Position(5) + [StringCompare(Container(4444).NumItems,7)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,504" condition="Container(300).Position(5) + [StringCompare(Container(4444).NumItems,8)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,432" condition="Container(300).Position(5) + [StringCompare(Container(4444).NumItems,9)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,360" condition="Container(300).Position(5) + [StringCompare(Container(4444).NumItems,10)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,288" condition="Container(300).Position(5) + [StringCompare(Container(4444).NumItems,11)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,216" condition="Container(300).Position(5) + [StringCompare(Container(4444).NumItems,12)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,144" condition="Container(300).Position(5) + [StringCompare(Container(4444).NumItems,13)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,72" condition="Container(300).Position(5) + [StringCompare(Container(4444).NumItems,14)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,720" condition="Container(300).Position(6) + [StringCompare(Container(4444).NumItems,1) | StringCompare(Container(4444).NumItems,2) | StringCompare(Container(4444).NumItems,3) | StringCompare(Container(4444).NumItems,4) | StringCompare(Container(4444).NumItems,5)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,648" condition="Container(300).Position(6) + [StringCompare(Container(4444).NumItems,6)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,576" condition="Container(300).Position(6) + [StringCompare(Container(4444).NumItems,7)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,504" condition="Container(300).Position(6) + [StringCompare(Container(4444).NumItems,8)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,432" condition="Container(300).Position(6) + [StringCompare(Container(4444).NumItems,9)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,360" condition="Container(300).Position(6) + [StringCompare(Container(4444).NumItems,10)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,288" condition="Container(300).Position(6) + [StringCompare(Container(4444).NumItems,11)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,216" condition="Container(300).Position(6) + [StringCompare(Container(4444).NumItems,12)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,144" condition="Container(300).Position(6) + [StringCompare(Container(4444).NumItems,13)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,72" condition="Container(300).Position(6) + [StringCompare(Container(4444).NumItems,14)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,840" condition="Container(300).Position(7) + [StringCompare(Container(4444).NumItems,1) | StringCompare(Container(4444).NumItems,2) | StringCompare(Container(4444).NumItems,3)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,792" condition="Container(300).Position(7) + [StringCompare(Container(4444).NumItems,4)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,720" condition="Container(300).Position(7) + [StringCompare(Container(4444).NumItems,5)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,648" condition="Container(300).Position(7) + [StringCompare(Container(4444).NumItems,6)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,576" condition="Container(300).Position(7) + [StringCompare(Container(4444).NumItems,7)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,504" condition="Container(300).Position(7) + [StringCompare(Container(4444).NumItems,8)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,432" condition="Container(300).Position(7) + [StringCompare(Container(4444).NumItems,9)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,360" condition="Container(300).Position(7) + [StringCompare(Container(4444).NumItems,10)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,288" condition="Container(300).Position(7) + [StringCompare(Container(4444).NumItems,11)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,216" condition="Container(300).Position(7) + [StringCompare(Container(4444).NumItems,12)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,144" condition="Container(300).Position(7) + [StringCompare(Container(4444).NumItems,13)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,72" condition="Container(300).Position(7) + [StringCompare(Container(4444).NumItems,14)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,960" condition="Container(300).Position(8) + [StringCompare(Container(4444).NumItems,1)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,936" condition="Container(300).Position(8) + [StringCompare(Container(4444).NumItems,2)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,864" condition="Container(300).Position(8) + [StringCompare(Container(4444).NumItems,3)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,792" condition="Container(300).Position(8) + [StringCompare(Container(4444).NumItems,4)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,720" condition="Container(300).Position(8) + [StringCompare(Container(4444).NumItems,5)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,648" condition="Container(300).Position(8) + [StringCompare(Container(4444).NumItems,6)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,576" condition="Container(300).Position(8) + [StringCompare(Container(4444).NumItems,7)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,504" condition="Container(300).Position(8) + [StringCompare(Container(4444).NumItems,8)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,432" condition="Container(300).Position(8) + [StringCompare(Container(4444).NumItems,9)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,360" condition="Container(300).Position(8) + [StringCompare(Container(4444).NumItems,10)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,288" condition="Container(300).Position(8) + [StringCompare(Container(4444).NumItems,11)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,216" condition="Container(300).Position(8) + [StringCompare(Container(4444).NumItems,12)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,144" condition="Container(300).Position(8) + [StringCompare(Container(4444).NumItems,13)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,72" condition="Container(300).Position(8) + [StringCompare(Container(4444).NumItems,14)]">Conditional</animation>
                    
                    <animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,1080" condition="Container(300).Position(9) + [StringCompare(Container(4444).NumItems,1)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,1056" condition="Container(300).Position(9) + [StringCompare(Container(4444).NumItems,2)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,984" condition="Container(300).Position(9) + [StringCompare(Container(4444).NumItems,3)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,912" condition="Container(300).Position(9) + [StringCompare(Container(4444).NumItems,4)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,840" condition="Container(300).Position(9) + [StringCompare(Container(4444).NumItems,5)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,768" condition="Container(300).Position(9) + [StringCompare(Container(4444).NumItems,6)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,696" condition="Container(300).Position(9) + [StringCompare(Container(4444).NumItems,7)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,624" condition="Container(300).Position(9) + [StringCompare(Container(4444).NumItems,8)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,552" condition="Container(300).Position(9) + [StringCompare(Container(4444).NumItems,9)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,480" condition="Container(300).Position(9) + [StringCompare(Container(4444).NumItems,10)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,408" condition="Container(300).Position(9) + [StringCompare(Container(4444).NumItems,11)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,336" condition="Container(300).Position(9) + [StringCompare(Container(4444).NumItems,12)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,264" condition="Container(300).Position(9) + [StringCompare(Container(4444).NumItems,13)]">Conditional</animation>
					<animation effect="slide" time="150" tween="cubic" easing="inout" start="0" end="0,192" condition="Container(300).Position(9) + [StringCompare(Container(4444).NumItems,14)]">Conditional</animation>
					<animation effect="slide" time="150" start="0" end="818" condition="Control.HasFocus(4444) | SubString(Window(Home).Property(submenu),show)">Conditional</animation>
					<animation effect="fade" start="0" end="100" time="50" delay="250" condition="Control.HasFocus(4444) | SubString(Window(Home).Property(submenu),show)">Conditional</animation>
					<left>-384</left>
					<top>0</top>
					<width>384</width>
					<height>1080</height>
					<onup>4444</onup>
					<ondown>4444</ondown>
					<onleft>300</onleft>
                    <onback>ClearProperty(submenu, Home)</onback>
                    <onleft>ClearProperty(submenu, Home)</onleft>
                    <onright>ClearProperty(submenu, Home)</onright>
					<onright>77777</onright>
					<onback>300</onback>
					<pagecontrol>-</pagecontrol>
					<scrolltime tween="quadratic" easing="out">300</scrolltime>
					<focusposition>1</focusposition>
					<movement>2</movement>
					<orientation>vertical</orientation>
					<itemlayout height="72" width="384">
                        <control type="image">
                            <texture>colors/color_white.png</texture>
                            <colordiffuse>$INFO[Skin.String(GeneralPanelsColor)]</colordiffuse>
                        </control>
                        <control type="label">
                            <width>94%</width>
                            <height>100%</height>
                            <left>3%</left>
                            <font>Light26</font>
                            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
                            <selectedcolor>$INFO[Skin.String(GeneralTextColor)]</selectedcolor>
                            <align>left</align>
                            <aligny>center</aligny>
                            <label>[UPPERCASE]$INFO[ListItem.Label][/UPPERCASE]</label>
                        </control>
                    </itemlayout>
                    <focusedlayout height="72" width="384">
                        <control type="image">
                            <!-- focus sub menu -->
                            <texture>colors/color_white.png</texture>
                            <colordiffuse>$INFO[Skin.String(HomeViewDetailsFocusColor)]</colordiffuse>
                            <visible>Control.HasFocus(4444) | SubString(Window(Home).Property(submenu),show)</visible>
                        </control>
                        <control type="label">
                            <width>94%</width>
                            <height>100%</height>
                            <left>3%</left>
                            <font>Light26</font>
                            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
                            <align>left</align>
                            <aligny>center</aligny>
                            <scroll>true</scroll>
                            <label>[UPPERCASE]$INFO[ListItem.Label][/UPPERCASE]</label>
                        </control>
                        <control type="button">
                            <label>-</label>
                            <visible>false</visible>
                            <onfocus>SetProperty(submenu,show,home)</onfocus>
                        </control>
                    </focusedlayout>
                    <content>
                        <include condition="!Skin.HasSetting(DisableAllSubmenus)">skinshortcuts-submenu</include>
                    </content>
				</control>
				<control type="group">
					<visible>system.getbool(lookandfeel.enablerssfeeds) + ![Window.IsVisible(favourites) | Window.IsVisible(script-globalsearch-main.xml) | Window.IsVisible(main.xml) | Window.IsVisible(BigScreenList.xml)]</visible>
					<animation effect="slide" end="2500,0" time="240">WindowClose</animation>
					<animation effect="slide" start="1920,0" end="0,0" delay="300" time="240" condition="!window.previous(startup)">WindowOpen</animation>
					<animation effect="slide" start="1920" end="0" time="240">VisibleChange</animation>
					<animation effect="slide" start="1920,0" end="0,0" delay="800" time="480" condition="window.previous(startup)">WindowOpen</animation>
					<top>989</top>
					<control type="group">
						<control type="image">
							<top>42</top>
							<left>434</left>
							<width>1485</width>
							<height>50</height>
							<texture>background.png</texture>
							<colordiffuse>$VAR[ColorBackgroundVar]</colordiffuse>
						</control>
						<control type="label">
							<left>1880</left>
							<top>44</top>
							<width>60</width>
							<height>41</height>
							<label></label>
							<font>IconSmall</font>
							<textcolor>$VAR[ColorHighlightVar]</textcolor>
						</control>
						<control type="rss">
							<description>RSS feed</description>
							<left>450</left>
							<top>44</top>
							<height>30</height>
							<width>1415</width>
							<font>font13</font>
							<urlset>1</urlset>
							<textcolor>$VAR[ColorHighlightVar]</textcolor>
							<titlecolor>$VAR[ColorHighlightVar]</titlecolor>
							<headlinecolor>$VAR[ColorTextVar]</headlinecolor>
						</control>
					</control>
				</control>
			</control>
			<!-- MainMenu -->
			<control type="image">
                <!-- Panel -->
                <top>0</top>
                <width>434</width>
                <height>100%</height>
                <texture>colors/color_white.png</texture>
                <colordiffuse>$INFO[Skin.String(GeneralPanelsColor)]</colordiffuse>
            </control>
			<control type="image">
                <!-- Home Focus panel -->
                <left>0</left>
                <top>0</top>
                <width>434</width>
                <height>120</height>
                <animation effect="fade" start="100" end="60" time="150" condition="!Control.HasFocus(300)">Conditional</animation>
                <texture>colors/color_white.png</texture>
                <colordiffuse>$INFO[Skin.String(HomeViewDetailsFocusColor)]</colordiffuse>
                <animation effect="slide" end="0,120" time="150" tween="cubic" easing="inout" condition="Container(300).Position(9)">Conditional</animation>
                <animation effect="slide" end="0,120" time="150" tween="cubic" easing="inout" condition="Container(300).Position(9) | Container(300).Position(8)">Conditional</animation>
                <animation effect="slide" end="0,120" time="150" tween="cubic" easing="inout" condition="Container(300).Position(9) | Container(300).Position(8) | Container(300).Position(7)">Conditional</animation>
                <animation effect="slide" end="0,120" time="150" tween="cubic" easing="inout" condition="Container(300).Position(9) | Container(300).Position(8) | Container(300).Position(7) | Container(300).Position(6)">Conditional</animation>
                <animation effect="slide" end="0,120" time="150" tween="cubic" easing="inout" condition="Container(300).Position(9) | Container(300).Position(8) | Container(300).Position(7) | Container(300).Position(6) | Container(300).Position(5)">Conditional</animation>
                <animation effect="slide" end="0,120" time="150" tween="cubic" easing="inout" condition="Container(300).Position(9) | Container(300).Position(8) | Container(300).Position(7) | Container(300).Position(6) | Container(300).Position(5) | Container(300).Position(4)">Conditional</animation>
                <animation effect="slide" end="0,120" time="150" tween="cubic" easing="inout" condition="Container(300).Position(9) | Container(300).Position(8) | Container(300).Position(7) | Container(300).Position(6) | Container(300).Position(5) | Container(300).Position(4) | Container(300).Position(3)">Conditional</animation>
                <animation effect="slide" end="0,120" time="150" tween="cubic" easing="inout" condition="Container(300).Position(9) | Container(300).Position(8) | Container(300).Position(7) | Container(300).Position(6) | Container(300).Position(5) | Container(300).Position(4) | Container(300).Position(3) | Container(300).Position(2)">Conditional</animation>
                <animation effect="slide" end="0,120" time="150" tween="cubic" easing="inout" condition="Container(300).Position(9) | Container(300).Position(8) | Container(300).Position(7) | Container(300).Position(6) | Container(300).Position(5) | Container(300).Position(4) | Container(300).Position(3) | Container(300).Position(2) | Container(300).Position(1)">Conditional</animation>
            </control>
            <control type="list" id="300">
                <animation effect="fade" start="100" end="50" time="150" condition="!Control.HasFocus(300)">conditional</animation>
                <left>0</left>
                <top>0</top>
                <width>434</width>
                <height>100%</height>
                <onleft condition="!Skin.HasSetting(DisablePowerMenu)">ActivateWindow(ShutdownMenu)</onleft>
                <ondown>300</ondown>
                <onup>300</onup>
                <onright>4444</onright>
                <pagecontrol>-</pagecontrol>
                <scrolltime tween="quadratic" easing="out">150</scrolltime>
                <orientation>Vertical</orientation>
                <itemlayout height="120" width="434">
                    <control type="label">
                        <width>94%</width>
                        <height>100%</height>
                        <left>5%</left>
                        <font>Light44</font>
                        <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
                        <align>left</align>
                        <aligny>center</aligny>
                        <label>[UPPERCASE]$INFO[ListItem.Label][/UPPERCASE]</label>
                    </control>
                </itemlayout>
                <focusedlayout height="120" width="434">
                    <control type="label">
                        <width>94%</width>
                        <height>100%</height>
                        <left>5%</left>
                        <font>Light44</font>
                        <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
                        <selectedcolor>$INFO[Skin.String(GeneralTextColor)]</selectedcolor>
                        <align>left</align>
                        <aligny>center</aligny>
                        <scroll>true</scroll>
                        <label>[UPPERCASE]$INFO[ListItem.Label][/UPPERCASE]</label>
                    </control>
                </focusedlayout>
                <content><include>skinshortcuts-mainmenu</include></content>
            </control>
		</control>
    </include>

    <!--  includes for widgets -->
    <include name="VerticalHomeWidgetsNormal">
        <!-- widgets -->   
        <control type="group" id="77777">
            <right>0</right>
            <posx>570</posx>
            <width>1000</width>
            <visible>!IsEmpty(Container(300).ListItem.Property(widget)) + !Skin.HasSetting(DisableAllWidgets)</visible>
            <include>animation_window_open_close</include>
            
            <!-- widgets -->
            <control type="group">
                <include condition="!Skin.HasSetting(DisableAllWidgets)">skinshortcuts-template-widget</include>
                <include condition="!Skin.HasSetting(DisableAllWidgets)">skinshortcuts-template-widget.1</include>
                <include condition="!Skin.HasSetting(DisableAllWidgets)">skinshortcuts-template-widget.2</include>
                <include condition="!Skin.HasSetting(DisableAllWidgets)">skinshortcuts-template-widget.3</include>
            </control>
            
            <!--change widget button -->
            <control type="group">
                <right>65</right>
                <bottom>60</bottom>
                <width>800</width>
                <height>45</height>
                <visible>!Skin.String(DisableAllWidgets)</visible>
                <include condition="!Skin.String(HomeLayout, verticalbig)">changeWidgetButton</include>
            </control>
            
            <control type="group">
                <right>65</right>
                <bottom>60</bottom>
                <width>800</width>
                <height>45</height>
                <visible>!Skin.String(DisableAllWidgets) + Skin.String(HomeLayout, verticalbig)</visible>
                <control type="button" id="511">
                    <right>0</right>
                    <width>600</width>
                    <height>45</height>
                    <align>right</align>
                    <font>Light28</font>
                    <onleft>300</onleft>
                    <onright>300</onright>
                    <ondown>510</ondown>
                    <textoffsetx>50</textoffsetx>
                    <label>[UPPERCASE]$VAR[changeWidgetLabel][/UPPERCASE]</label>
                    <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                    <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                    <onclick>$VAR[changeWidgetClickActions]</onclick>
                    <onup>$VAR[focusWidget]</onup>
                    <texturenofocus>-</texturenofocus>
                    <visible allowhiddenfocus="true">!IsEmpty(Container(300).ListItem.Property(widget))</visible>
                </control>
                <control type="image">
                    <right>5</right>
                    <posy>8</posy>
                    <width>30</width>
                    <height>30</height>
                    <texture colordiffuse="$INFO[Skin.String(ViewDetailsTextColor)]">home/home_arrow_up.png</texture>
                    <visible>Control.IsVisible(511)</visible>
                </control>
            </control>
            
            <!-- busy image while widget loading -->
            <control type="multiimage">
                <right>60</right>
                <bottom>120</bottom>
                <width>100</width>
                <height>100</height>
                <aspectratio>keep</aspectratio>
                <imagepath>$INFO[Skin.String(SkinHelper.SpinnerTexturePath)]</imagepath>
                <timeperimage>100</timeperimage>
                <colordiffuse>$INFO[Skin.String(SpinnerTextureColor)]</colordiffuse>
                <fadetime>0</fadetime>
                <visible>!Skin.String(SkinHelper.SpinnerTexturePath,None)</visible>
                <visible>[Control.IsVisible(510) + Container(510).IsUpdating] | [Control.IsVisible(520) + Container(520).IsUpdating] | [Control.IsVisible(530) + Container(530).IsUpdating] | [Control.IsVisible(540) + Container(540).IsUpdating]</visible>
            </control>
        </control>
	
    </include>
    <variable name="VerticalHomeAdvancedWidgetHeader_textcolor">
        <value condition="Skin.HasSetting(HideWidgetPanelBackground)">$INFO[Skin.String(ViewDetailsListItemTextColor)]</value>
        <value>$INFO[Skin.String(GeneralTextColor)]</value>
    </variable>
    <include name="VerticalHomeAdvancedWidgetHeader">
        <control type="group" id="$PARAM[id]">
            <width>1285</width>
            <height>45</height>
            <right>60</right>
            <include>widgets_animation</include>
            <visible>!IsEmpty(Container(300).Listitem.Property(widget$PARAM[widgetidprefix]))</visible>
            <control type="label">
                <height>40</height>
                <posx>10</posx>
                <font>Bold30</font>
                <align>right</align>
                <aligny>top</aligny>
                <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
                <label>$INFO[Container(300).ListItem.Property(widgetName$PARAM[widgetidprefix])]</label>
                <visible>IsEmpty(Container($PARAM[containerid]).ListItem.Property(similartitle))</visible>
                <visible>!Skin.String(HomeLayout, verticalbig)</visible>
            </control>
            <control type="label">
                <height>40</height>
                <posx>10</posx>
                <font>Bold30</font>
                <align>right</align>
                <aligny>top</aligny>
                <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
                <label>$LOCALIZE[31545] $INFO[Container($PARAM[containerid]).ListItem.Property(similartitle)]</label>
                <visible>!IsEmpty(Container($PARAM[containerid]).ListItem.Property(similartitle))</visible>
                <visible>!Skin.String(HomeLayout, verticalbig)</visible>
            </control>
            <control type="label">
                <height>40</height>
                <posx>10</posx>
                <font>Light32</font>
                <align>right</align>
                <aligny>top</aligny>
                <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
                <label>[UPPERCASE]$INFO[Container(300).ListItem.Property(widgetName$PARAM[widgetidprefix])][/UPPERCASE]</label>
                <visible>IsEmpty(Container($PARAM[containerid]).ListItem.Property(similartitle))</visible>
                <visible>Skin.String(HomeLayout, verticalbig)</visible>
            </control>
            <control type="label">
                <height>40</height>
                <posx>10</posx>
                <font>Light32</font>
                <align>right</align>
                <aligny>top</aligny>
                <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
                <label>[UPPERCASE]$LOCALIZE[31545] $INFO[Container($PARAM[containerid]).ListItem.Property(similartitle)][/UPPERCASE]</label>
                <visible>!IsEmpty(Container($PARAM[containerid]).ListItem.Property(similartitle))</visible>
                <visible>Skin.String(HomeLayout, verticalbig)</visible>
            </control>
        </control>
    </include>
   
 </includes>