<?xml version="1.0" encoding="utf-8"?>
<!--Titan-->
<includes>
    <include name="Header">
     
        <!-- Header Normal -->
        <control type="group">
            <visible>!Skin.HasSetting(CompactHeader)</visible>
            <visible>!Window.IsActive(DialogKaiToast.xml) + !Window.IsActive(DialogExtendedProgressBar.xml) + !Control.IsVisible(77551) + !Control.IsVisible(88888)</visible>
            <visible>![[SubString(Skin.String(HomeLayout), 2) | SubString(Skin.String(HomeLayout), 1)] + !Skin.HasSetting(AutoShowWidgets) + StringCompare(Window(Home).Property(ShowWidget),show) + Skin.HasSetting(HideWidgetDetailsPanel)]</visible>
            <!-- Header Logo left -->
            <control type="group">
                <include>HeaderLogo</include>
                <visible>![Window.IsActive(Home) + Skin.String(HomeLayout,verticalbig)]</visible>
                <include condition="!Skin.HasSetting(LowPerformanceMode)">animation_fade_visible_hidden</include>
                <visible>![StringCompare(Window(Home).Property(ShowViewSubMenu),show) | Control.IsVisible(882)]</visible>
                <visible>[!Window.IsActive(Home) + SubString(Skin.String(general_header),logo)] | [Window.IsActive(Home) + SubString(Skin.String(home_header),logo)]</visible>
            </control>
            
            <!-- Time right -->
            <control type="group">
                <include>TimeInfo</include>
                <include condition="!Skin.HasSetting(LowPerformanceMode)">animation_fade_visible_hidden</include>
                <visible>![Window.IsActive(DialogMuteBug.xml) | Window.IsActive(DialogVolumeBar.xml) | Control.IsVisible(881)]</visible>
                <visible>[!Window.IsActive(Home) + SubString(Skin.String(general_header),time)] | [Window.IsActive(Home) + SubString(Skin.String(home_header),time)]</visible>
            </control>
            
            <!-- Title left -->
            <control type="group">
                <include>HeaderTitle</include>
                <visible>![Window.IsActive(Home) + Skin.String(HomeLayout,verticalbig)]</visible>
                <include condition="!Skin.HasSetting(LowPerformanceMode)">animation_fade_visible_hidden</include>
                <visible>![StringCompare(Window(Home).Property(ShowViewSubMenu),show) | Control.IsVisible(882)]</visible>
                <visible>[!Window.IsActive(Home) + SubString(Skin.String(general_header),title)] | [Window.IsActive(Home) + SubString(Skin.String(home_header),title)]</visible>
            </control>
            
            <!-- Weather left -->
            <control type="group">
                <include>WeatherInfoLeft</include>
                <visible>![Window.IsActive(Home) + Skin.String(HomeLayout,verticalbig)]</visible>
                <include condition="!Skin.HasSetting(LowPerformanceMode)">animation_fade_visible_hidden</include>
                <visible>![StringCompare(Window(Home).Property(ShowViewSubMenu),show) | Control.IsVisible(882)]</visible>
                <visible>[!Window.IsActive(Home) + SubString(Skin.String(general_header),weather-)] | [Window.IsActive(Home) + SubString(Skin.String(home_header),weather-)]</visible>
            </control>
            
            <!-- Weather right -->
            <control type="group">
                <include>WeatherInfoRight</include>
                <include condition="!Skin.HasSetting(LowPerformanceMode)">animation_fade_visible_hidden</include>
                <visible>![Window.IsActive(DialogMuteBug.xml) | Window.IsActive(DialogVolumeBar.xml) | Control.IsVisible(881)]</visible>
                <visible>[!Window.IsActive(Home) + SubString(Skin.String(general_header),-weather)] | [Window.IsActive(Home) + SubString(Skin.String(home_header),-weather)]</visible>
            </control>

            <!-- Profile right -->
            <control type="group">
                <include>ProfileInfo</include>
                <include condition="!Skin.HasSetting(LowPerformanceMode)">animation_fade_visible_hidden</include>
                <visible>![Window.IsActive(DialogMuteBug.xml) | Window.IsActive(DialogVolumeBar.xml)]</visible>
                <visible>Window.IsActive(Home) + SubString(Skin.String(home_header),-profile)</visible>
            </control>
            
        </control>
        
        <!-- Header Compact -->
        <control type="group">
            <visible>Skin.HasSetting(CompactHeader)</visible>
            <include condition="!Skin.HasSetting(LowPerformanceMode)">animation_fade_visible_hidden</include>
            <visible>!Window.IsActive(DialogKaiToast.xml) + !Window.IsActive(DialogExtendedProgressBar.xml) + !Control.IsVisible(77551) + !Control.IsVisible(88888)</visible>
            
            <!-- Header Logo left -->
            <control type="group">
                <include>HeaderLogo</include>
                <visible>![Window.IsActive(Home) + Skin.String(HomeLayout,verticalbig)]</visible>
                <include condition="!Skin.HasSetting(LowPerformanceMode)">animation_fade_visible_hidden</include>
                <visible>![StringCompare(Window(Home).Property(ShowViewSubMenu),show) | Control.IsVisible(882)]</visible>
                <visible>![Window.IsActive(Home) + Skin.String(HomeLayout,win10)] + !Skin.HasSetting(EnableTouchSupport)</visible>
                <visible>[!Window.IsActive(Home) + SubString(Skin.String(general_header),logo)] | [Window.IsActive(Home) + SubString(Skin.String(home_header),logo)]</visible>
            </control>
            
            <!-- Time right -->
            <control type="group">
                <include>TimeInfoCompact</include>
                <include condition="!Skin.HasSetting(LowPerformanceMode)">animation_fade_visible_hidden</include>
                <visible>![Window.IsActive(DialogMuteBug.xml) | Window.IsActive(DialogVolumeBar.xml) | Control.IsVisible(881)]</visible>
                <visible>[!Window.IsActive(Home) + SubString(Skin.String(general_header),time)] | [Window.IsActive(Home) + SubString(Skin.String(home_header),time)]</visible>
            </control>
            
            <!-- Profile right -->
            <control type="group">
                <include>ProfileInfoCompact</include>
                <include condition="!Skin.HasSetting(LowPerformanceMode)">animation_fade_visible_hidden</include>
                <visible>![Window.IsActive(DialogMuteBug.xml) | Window.IsActive(DialogVolumeBar.xml)]</visible>
                <visible>Window.IsActive(Home) + SubString(Skin.String(home_header),-profile)</visible>
            </control>
            
            <control type="grouplist" id="5555">
                <include condition="!Skin.HasSetting(LowPerformanceMode)">animation_fade_visible_hidden</include>		
                <orientation>horizontal</orientation>
                <itemgap>25</itemgap>
                <posx>50</posx>
                <top>25</top>
                <onright>890</onright>
                <ondown>9000</ondown>
                <onup>9000</onup>
                <visible>![Window.IsActive(Home) + Skin.String(HomeLayout,verticalbig)]</visible>
                <visible>![StringCompare(Window(Home).Property(ShowViewSubMenu),show) | Control.IsVisible(882)]</visible>
                <include condition="Skin.HasSetting(EnableTouchSupport) | [Window.IsActive(Home) + Skin.String(HomeLayout,win10)]">HeaderCompactTouchButtons</include>
                <!-- Title left -->
                <control type="group" id="99226">
                    <visible>[!Window.IsActive(Home) + SubString(Skin.String(general_header),title)] | [Window.IsActive(Home) + SubString(Skin.String(home_header),title)]</visible>
                    <control type="label">
                        <top>-15</top>
                        <align>left</align>
                        <width>800</width>
                        <label>$VAR[value_header]</label>
                        <font>Bold30</font>
                        <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
                        <shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
                    </control>
                    <control type="label">
                        <top>15</top>
                        <align>left</align>
                        <width>800</width>
                        <label>$VAR[value_subheader]</label>
                        <font>Reg26</font>
                        <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
                        <shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
                    </control>
                </control>
                <!--infoline win10 home-->
                <control type="label">	
                    <description>InfoLine</description>
                    <posx>20%</posx>
                    <bottom>5</bottom>
                    <width>60%</width>
                    <height>60</height>
                    <font>Light28</font>
                    <align>center</align>
                    <label>$VAR[infolinevar]</label>
                    <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
                    <shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
                    <visible>Window.IsActive(Home) + Skin.String(HomeLayout,win10)</visible>
                </control>
            </control>
            
            <!-- Weather right -->
            <control type="group">
                <include>WeatherInfoCompact</include>
                <include condition="!Skin.HasSetting(LowPerformanceMode)">animation_fade_visible_hidden</include>
                <visible>![Window.IsActive(DialogMuteBug.xml) | Window.IsActive(DialogVolumeBar.xml) | Control.IsVisible(881)]</visible>
                <animation effect="slide" end="-180,0" time="400" tween="cubic" easing="inout" delay="0" condition="Window.IsActive(DialogMuteBug.xml) | Window.IsActive(DialogVolumeBar.xml)">Conditional</animation>
                <visible>[!Window.IsActive(Home) + SubString(Skin.String(general_header),-weather)] | [Window.IsActive(Home) + SubString(Skin.String(home_header),-weather)]</visible>
            </control>           
        </control>

    </include>

    <include name="HeaderCompactTouchButtons">
        <control type="radiobutton" id="99223">
            <width>60</width>
            <height>60</height>
            <font>-</font>
            <selected>Control.HasFocus(99223)</selected>
            <texturefocus>-</texturefocus>
            <texturenofocus>-</texturenofocus>
            <textureradiofocus colordiffuse="$INFO[Skin.String(HomeViewDetailsFocusColor)]">common/menu.png</textureradiofocus>
            <textureradionofocus colordiffuse="$INFO[Skin.String(HeaderTextColor)]">common/menu.png</textureradionofocus>
            <radiowidth>60</radiowidth>
            <radioheight>60</radioheight>
            <onclick condition="!StringCompare(Window(Home).Property(ShowViewSubMenu),show) + [Skin.String(HomeLayout,win10) | Skin.String(HomeLayout,netflix)]">SetProperty(ShowViewSubMenu, show, Home)</onclick>
            <onclick condition="StringCompare(Window(Home).Property(ShowViewSubMenu),show) + [Skin.String(HomeLayout,win10) | Skin.String(HomeLayout,netflix)]">ClearProperty(ShowViewSubMenu, Home)</onclick>
            <onclick condition="[Skin.String(HomeLayout,win10) | Skin.String(HomeLayout,netflix)]">SetFocus(300)</onclick>
            <onclick condition="![Skin.String(HomeLayout,win10) | Skin.String(HomeLayout,netflix)]">SetFocus(4444)</onclick>
            <visible>Window.IsActive(Home)</visible>
        </control>
        <control type="radiobutton" id="99227">
            <width>60</width>
            <height>60</height>
            <font>-</font>
            <selected>Control.HasFocus(99227)</selected>
            <texturefocus>-</texturefocus>
            <texturenofocus>-</texturenofocus>
            <textureradiofocus colordiffuse="$INFO[Skin.String(HomeViewDetailsFocusColor)]">touchcontrols/widget.png</textureradiofocus>
            <textureradionofocus colordiffuse="$INFO[Skin.String(HeaderTextColor)]">touchcontrols/widget.png</textureradionofocus>
            <radiowidth>50</radiowidth>
            <radioheight>50</radioheight>
            <onclick condition="StringCompare(Window(Home).Property(ShowWidget),show)">Control.SetFocus(300)</onclick>
            <onclick condition="!StringCompare(Window(Home).Property(ShowWidget),show)">SetProperty(ShowWidget, show, Home)</onclick>
            <onclick condition="StringCompare(Window(Home).Property(ShowWidget),show)">ClearProperty(ShowWidget, Home)</onclick>
            <visible>Window.IsActive(Home) + [Skin.String(HomeLayout,1) | Skin.String(HomeLayout,2) | Skin.String(HomeLayout,1small) | Skin.String(HomeLayout,2small) | SubString(Skin.String(HomeLayout),hor)]</visible>
            <visible>!IsEmpty(Container(300).ListItem.Property(widget))</visible>
        </control>
        <control type="radiobutton" id="99224">
            <description>powerbutton</description>
            <width>60</width>
            <height>60</height>
            <selected>Control.HasFocus(99224)</selected>
            <texturefocus>-</texturefocus>
            <texturenofocus>-</texturenofocus>
            <textureradiofocus colordiffuse="$INFO[Skin.String(HomeViewDetailsFocusColor)]">common/shutdown2.png</textureradiofocus>
            <textureradionofocus colordiffuse="$INFO[Skin.String(HeaderTextColor)]">common/shutdown2.png</textureradionofocus>
            <radiowidth>50</radiowidth>
            <radioheight>50</radioheight>
            <onclick>ActivateWindow(111)</onclick>
            <visible>!Skin.HasSetting(DisablePowerMenu) + Window.IsActive(Home)</visible>
            <visible allowhiddenfocus="true">!Skin.HasSetting(HidePowerMenu)</visible>
        </control>
        <control type="radiobutton" id="99225">
            <description>back button</description>
            <width>60</width>
            <height>60</height>
            <selected>Control.HasFocus(99225)</selected>
            <texturefocus>-</texturefocus>
            <texturenofocus>-</texturenofocus>
            <textureradiofocus colordiffuse="$INFO[Skin.String(HomeViewDetailsFocusColor)]">touchcontrols/back.png</textureradiofocus>
            <textureradionofocus colordiffuse="$INFO[Skin.String(HeaderTextColor)]">touchcontrols/back.png</textureradionofocus>
            <radiowidth>50</radiowidth>
            <radioheight>50</radioheight>
            <onclick>Back</onclick>
            <onclick>ClearProperty(ShowViewSubMenu, Home)</onclick>
            <onclick>ClearProperty(ShowWidget, Home)</onclick>
            <visible>!Window.IsActive(Home) | [Window.IsActive(Home) + Player.HasMedia]</visible>		
        </control>
    </include>
	
    <include name="HeaderTitle">
	
        <control type="group">
            <control type="image">
                <visible>skin.hastheme(classic)</visible>
                <posx>61</posx>
                <posy>31</posy>
                <height>64</height>
                <width>64</width>
                <aligny>center</aligny>
                <colordiffuse>$INFO[Skin.String(HeaderTextShadowColor)]</colordiffuse>
                <texture>$VAR[value_header_icon]</texture>
            </control>
            <control type="image">
                <visible>skin.hastheme(classic)</visible>
                <posx>60</posx>
                <posy>30</posy>
                <height>64</height>
                <width>64</width>
                <aligny>center</aligny>
                <colordiffuse>$INFO[Skin.String(HeaderTextColor)]</colordiffuse>
                <texture>$VAR[value_header_icon]</texture>
            </control>
            <control type="label">
                <posx>61</posx>
                <posy>0</posy>
                <width min="80" max="1400">auto</width>
                <height>100</height>
                <font>Bold45</font>
                <align>left</align>
                <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
                <label>$VAR[value_header]</label>
                <shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
                <animation effect="slide" end="80,15" time="0" condition="skin.hastheme(classic)">Conditional</animation>
            </control>
             <control type="label">
                <visible>!skin.hastheme(classic)</visible>
                <posy>75</posy>
                <posx>61</posx>
                <width min="0" max="1400">auto</width>
                <height>50</height>
                <label>$VAR[value_subheader]</label>
                <font>Reg28</font>
                <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
            </control>
        </control>

    </include>
        
	<include name="ClearLogo">
		<!--clearlogo top right-->
		<control type="image" id="881">
			<right>60</right>
			<top>10</top>
			<width>550</width>
			<height>90</height>
			<fadetime>600</fadetime>
			<aspectratio align="right" aligny="center">keep</aspectratio>
			<texture>$VAR[ListItemClearLogo]</texture>
			<visible>!IsEmpty(Control.GetLabel(881)) + Skin.String(ClearLogoLocation, topright)</visible>
            <visible>!Window.IsActive(DialogKaiToast.xml) + !Window.IsActive(DialogExtendedProgressBar.xml)</visible>
			<animation type="Conditional" condition="Window.IsActive(DialogMuteBug.xml) | Window.IsActive(DialogVolumeBar.xml)">
                <effect type="slide" start="0,0" end="-120,0" time="400" tween="cubic" easing="inout" delay="0" />
            </animation>
		</control>
		
		<!--clearlogo top left-->
		<control type="image" id="882">
			<left>60</left>
			<top>10</top>
			<width>550</width>
			<height>90</height>
			<fadetime>600</fadetime>
			<aspectratio align="left" aligny="center">keep</aspectratio>
			<texture>$VAR[ListItemClearLogo]</texture>
			<visible>!IsEmpty(Control.GetLabel(882)) + Skin.String(ClearLogoLocation, topleft)</visible>
            <visible>!Window.IsActive(DialogKaiToast.xml) + !Window.IsActive(DialogExtendedProgressBar.xml)</visible>
		</control>
		
		<!--clearlogo top center-->
		<control type="image" id="883">
			<left>760</left>
			<top>10</top>
			<width>400</width>
			<height>90</height>
			<fadetime>600</fadetime>
			<aspectratio align="center" aligny="center">keep</aspectratio>
			<texture>$VAR[ListItemClearLogo]</texture>
            <visible>!Window.IsActive(DialogKaiToast.xml) + !Window.IsActive(DialogExtendedProgressBar.xml)</visible>
			<visible>!IsEmpty(Control.GetLabel(883)) + Skin.String(ClearLogoLocation, topcenter) + !Skin.HasSetting(ShowMovieTitleHeader)</visible>
		</control>
		
		<!--clearlogo footer (not touch mode or large icons-->
		<control type="image" id="884">
			<left>810</left>
			<bottom>10</bottom>
			<width>300</width>
			<height>80</height>
			<fadetime>600</fadetime>
			<aspectratio>keep</aspectratio>
			<texture>$VAR[ListItemClearLogo]</texture>
            <visible>!skin.hassetting(nofooterbar)</visible>
            <visible>![[Skin.String(mediaflagsstyle,large_color) | Skin.String(mediaflagsstyle,large) | Skin.HasSetting(EnableTouchSupport)] + !IsEmpty(ListItem.VideoResolution)]</visible>
			<visible>!IsEmpty(Control.GetLabel(884)) + Skin.String(ClearLogoLocation, footer) + !skin.hastheme(classic) + !StringCompare(Window(Home).Property(showinfopanel),show)</visible>
		</control>
        <!--clearlogo footer (with touch mode or large icons-->
        <control type="image" id="884">
			<right>350</right>
			<bottom>10</bottom>
			<width>280</width>
			<height>80</height>
			<fadetime>600</fadetime>
			<aspectratio>keep</aspectratio>
			<texture align="right">$VAR[ListItemClearLogo]</texture>
            <visible>!skin.hassetting(nofooterbar)</visible>
            <visible>[[Skin.String(mediaflagsstyle,large_color) | Skin.String(mediaflagsstyle,large) | Skin.HasSetting(EnableTouchSupport)] + !IsEmpty(ListItem.VideoResolution)]</visible>
			<visible>!IsEmpty(Control.GetLabel(884)) + Skin.String(ClearLogoLocation, footer) + !skin.hastheme(classic) + !StringCompare(Window(Home).Property(showinfopanel),show)</visible>
            <animation effect="slide" start="0,0" end="150,0" time="0" condition="[Skin.HasSetting(StudioInFooter) | Skin.HasSetting(IMDBRatingInFooter)] + ![Skin.HasSetting(StudioInFooter) + Skin.HasSetting(IMDBRatingInFooter)]">Conditional</animation>
            <animation effect="slide" start="0,0" end="60,0" time="0" condition="[Skin.HasSetting(StudioInFooter) + Skin.HasSetting(IMDBRatingInFooter)]">Conditional</animation>
            <animation effect="slide" end="-100" time="0" condition="!IsEmpty(ListItem.Top250)">Conditional</animation>
        </control>
		
	</include>
	
	<include name="TimeInfo">
        <control type="group">
            <control type="grouplist">
                <!--Time Grouplist Line 1-->
                <posx>1260</posx>
                <posy>0</posy>
                <width>600</width>
                <height>100</height>
                <align>right</align>
                <itemgap>4</itemgap>
                <orientation>horizontal</orientation>
                <usecontrolcoords>true</usecontrolcoords>
                <control type="label">
                    <!--Time-->
                    <width min="0" max="300">auto</width>
                    <height>100</height>
                    <info>System.Time(hh:mm)</info>
                    <font>Bold55</font>
                    <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
                </control>
                <control type="label">
                    <!--AM-->
                    <visible>substring(system.time,AM,right)</visible>
                    <width min="0" max="150">auto</width>
                    <height>100</height>
                    <label>378</label>
                    <font>Bold55</font>
                    <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
                </control>
                <control type="label">
                    <!--PM-->
                    <visible>substring(system.time,PM,right)</visible>
                    <width min="0" max="150">auto</width>
                    <height>100</height>
                    <label>379</label>
                    <font>Bold55</font>
                    <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
                </control>
            </control>
            <control type="grouplist">
                <!--Date Grouplist Line 2-->
                <posx>1260</posx>
                <posy>75</posy>
                <width>600</width>
                <height>50</height>
                <align>right</align>
                <itemgap>4</itemgap>
                <orientation>horizontal</orientation>
                <usecontrolcoords>true</usecontrolcoords>
                <visible>!ControlGroup(400).HasFocus</visible>
				<visible>![Skin.HasSetting(EnableTouchSupport) + Control.IsVisible(88888)]</visible>
                <control type="label">
                    <!--Day-->
                    <width min="0" max="400">auto</width>
                    <height>50</height>
                    <info>System.Date(DDD)</info>
                    <font>Reg30</font>
                    <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
                </control>
                <control type="label">
                    <width min="0" max="400">auto</width>
                    <height>50</height>
                    <label>, </label>
                    <font>Reg30</font>
                    <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
                </control>
                <control type="label">
                    <!--Date-->
                    <width min="0" max="400">auto</width>
                    <height>50</height>
                    <info>System.Date(d)</info>
                    <font>Reg30</font>
                    <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
                </control>
                <control type="label">
                    <visible>SubString(System.Language,German)</visible>
                    <width min="0" max="400">auto</width>
                    <height>50</height>
                    <label>. </label>
                    <font>Reg30</font>
                    <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
                </control>
                <control type="label">
                    <label></label>
                    <visible>!SubString(System.Language,German)</visible>
                    <width min="0" max="400">auto</width>
                    <height>50</height>
                    <font>Reg30</font>
                    <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
                </control>
                <control type="label">
                    <!--Month-->
                    <width min="0" max="400">auto</width>
                    <height>50</height>
                    <info>System.Date(MMM)</info>
                    <font>Reg30</font>
                    <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
					
                </control>
            </control>
        </control>
    
	</include>
    
    <include name="TimeInfoCompact">
        <control type="group">
            <control type="label">
                <right>50</right>
                <top>10</top>
                <align>right</align>
                <width>300</width>
                <info>System.Time</info>
                <font>Bold30</font>
                <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
            </control>
            <control type="label">
                <right>50</right>
                <top>40</top>
                <align>right</align>
                <width>500</width>
                <info>System.Date</info>
                <font>Reg26</font>
                <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
            </control>
        </control>
    </include>
    
	<include name="ProfileInfo">
		<control type="group" id="891">
			<defaultcontrol>890</defaultcontrol>
			<right>60</right>
			<posy>15</posy>
            <width>150</width>
            <height>110</height>
            <width>150</width>
			<height>80</height>
			<control type="image">
				<texture diffuse="home/home_matte2.png">colors/color_white.png</texture>
				<colordiffuse>$INFO[Skin.String(GeneralPanelsColor)]</colordiffuse>
				<visible>!Control.HasFocus(890)</visible>	
			</control>
			<control type="image">
				<texture diffuse="home/home_matte2.png">colors/color_white.png</texture>
				<colordiffuse>$INFO[Skin.String(ButtonFocusColor)]</colordiffuse>
				<visible>Control.HasFocus(890)</visible>	
			</control>
			<control type="image" id="888">	
				<bordersize>8</bordersize>
                <height>75%</height>
				<texture fallback="common/profil/avatar.png">$INFO[System.ProfileThumb]</texture>
				<aspectratio align="center" valign="top">keep</aspectratio>
				<visible>!Control.HasFocus(890)</visible>	
			</control>
			<control type="image" id="889">
				<bordersize>8</bordersize>
                <height>75%</height>
				<texture fallback="common/profil/avatar.png">$INFO[System.ProfileThumb]</texture>
				<aspectratio align="center" valign="top">keep</aspectratio>
				<visible>Control.HasFocus(890)</visible>			
			</control>
			<control type="button" id="890">
				<ondown>300</ondown>
				<width>100%</width>
				<height>100%</height>
				<texturefocus></texturefocus>
				<texturenofocus></texturenofocus>
				<onclick>System.LogOff</onclick>
			</control>
			<control type="label">
				<!--Profile name-->
				<left>4%</left>
                <width>92%</width>
				<bottom>0</bottom>
                <height>25%</height>
				<label>$VAR[ProfileLabel]</label>
				<align>center</align>
                <aligny>center</aligny>
				<font>Reg22</font>
				<textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
			</control>
		</control>
	</include>
    
    <include name="ProfileInfoCompact">
        <control type="radiobutton" id="890">
            <right>30</right>
            <top>20</top>
            <ondown>9000</ondown>
            <onleft>5555</onleft>
            <width>600</width>
            <height>60</height>
            <radiowidth>60</radiowidth>
            <radioheight>60</radioheight>
            <align>right</align>
            <aligny>center</aligny>
            <font>Reg26</font>
            <label>$VAR[ProfileLabel]</label>
            <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
            <focusedcolor>$INFO[Skin.String(HomeViewDetailsFocusColor)]</focusedcolor>
            <textureradiofocus colordiffuse="$INFO[Skin.String(HomeViewDetailsFocusColor)]">common/profil/avatar.png</textureradiofocus>
            <textureradionofocus colordiffuse="$INFO[Skin.String(HeaderTextColor)]">common/profil/avatar.png</textureradionofocus>
            <textoffsetx>70</textoffsetx>
            <radioposx>0</radioposx>
            <pulseonselect>false</pulseonselect>
            <texturefocus>-</texturefocus>
            <texturenofocus>-</texturenofocus>
            <onclick>System.LogOff</onclick>
            <selected>Control.HasFocus(890)</selected>
        </control>
    </include>
    
	<include name="WeatherInfoLeft">
        <!-- weather info -->
        <control type="group" id="667711">
            <posx>30</posx>
            <posy>0</posy>
            <width>350</width>
            <height>300</height>
            <!--Weather Today-->
            <control type="multiimage">
                <!--Icon-->
                <imagepath>$INFO[Skin.String(WeatherIconPack.path)]$INFO[Window(Weather).Property(Current.FanartCode)]$VAR[WeatherIconsExtension]</imagepath>
                <width>125</width>
                <height>125</height>
                <aspectratio align="left" aligny="bottom">keep</aspectratio>
            </control>
            <control type="label">
                <!--Temp-->
                <width>160</width>
                <height>40</height>
                <posx>140</posx>
                <posy>25</posy>
                <font>Bold38</font>
                <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
                <align>left</align>
                <label>$INFO[Window(Weather).Property(Current.Temperature)] $INFO[System.TemperatureUnits]</label>
				<shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
            </control>
            <control type="label">
                <!--Temp-->
                <width>400</width>
                <height>40</height>
                <posx>140</posx>
                <posy>70</posy>
                <font>Reg28</font>
                <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
				<shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
                <align>left</align>
                <label>$INFO[Window(Weather).Property(Current.Condition)]</label>
            </control>
        </control>
    </include>
    
    <include name="WeatherInfoRight">
        <!-- weather info -->
        <control type="group" id="667711">
            <right>30</right>
            <posy>0</posy>
            <width>350</width>
            <height>300</height>
            <!--Weather Today-->
            <control type="multiimage">
                <!--Icon-->
                <imagepath>$INFO[Skin.String(WeatherIconPack.path)]$INFO[Window(Weather).Property(Current.FanartCode)]$VAR[WeatherIconsExtension]</imagepath>
                <width>125</width>
                <height>125</height>
                <right>0</right>
                <posy>10</posy>
                <aspectratio align="right" aligny="bottom">keep</aspectratio>
            </control>
            <control type="label">
                <!--Temp-->
                <width>160</width>
                <height>40</height>
                <right>140</right>
                <posy>25</posy>
                <font>Bold38</font>
                <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
                <align>right</align>
                <label>$INFO[Window(Weather).Property(Current.Temperature)] $INFO[System.TemperatureUnits]</label>
				<shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
            </control>
            <control type="label">
                <!--Temp-->
                <width>400</width>
                <height>40</height>
                <right>140</right>
                <posy>70</posy>
                <font>Reg28</font>
                <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
				<shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
                <align>right</align>
                <label>$INFO[Window(Weather).Property(Current.Condition)]</label>
            </control>
        </control>
    </include>
    
    <include name="WeatherInfoCompact">
        <control type="group">
            <control type="multiimage">
                <right>20</right>
                <top>5</top>
                <imagepath>$INFO[Skin.String(WeatherIconPack.path)]$INFO[Window(Weather).Property(Current.FanartCode)]$VAR[WeatherIconsExtension]</imagepath>
                <width>100</width>
                <height>100</height>
                <aspectratio>keep</aspectratio>
            </control>
            <!-- time + date -->
            <control type="label">
                <right>130</right>
                <top>10</top>
                <align>right</align>
                <width>550</width>
                <label>[B]$INFO[System.Time][/B]</label>
                <font>Reg26</font>
                <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
            </control>
            <!-- weather conditions -->
            <control type="label">
                <right>130</right>
                <top>40</top>
                <align>right</align>
                <width>400</width>
                <label>$INFO[Window(Weather).Property(Current.Temperature)] $INFO[System.TemperatureUnits], $INFO[Window(Weather).Property(Current.Condition)]</label>
                <font>Reg26</font>
                <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(HeaderTextShadowColor)]</shadowcolor>
            </control>
        </control>
    </include>
    
    <include name="HeaderLogo">
        <!-- Kodi Logo image -->
        <control type="image">
            <posx>35</posx>
            <posy>10</posy>
            <height>110</height>
            <aspectratio align="left">keep</aspectratio>
            <colordiffuse>$INFO[Skin.String(HeaderTextColor)]</colordiffuse>
            <texture>home/kodi_logo_light.png</texture>
            <visible>!Skin.String(CustomLogoImage)</visible>
            <visible>![Window.IsActive(Home) + SubString(Skin.String(HomeLayout),simplever)]</visible>
        </control>
        <!-- custom Logo image -->
        <control type="image">
            <posx>35</posx>
            <posy>10</posy>
            <height>110</height>
            <aspectratio align="left">keep</aspectratio>
            <texture>$INFO[Skin.String(CustomLogoImage)]</texture>
            <visible>Skin.String(CustomLogoImage)</visible>
            <visible>![Window.IsActive(Home) + SubString(Skin.String(HomeLayout),simplever)]</visible>
        </control>
        
        <!-- logo for vertical home -->
        <control type="image">
            <right>1520</right>
            <posy>10</posy>
            <height>120</height>
            <width>375</width>
            <include condition="Skin.String(CustomLogoImage) + Skin.String(LogoImageAlignment,center)">ImageAlignCenter</include>
            <include condition="Skin.String(CustomLogoImage) + Skin.String(LogoImageAlignment,left)">ImageAlignLeft</include>
            <aspectratio align="right">keep</aspectratio>
            <texture>$VAR[LogoImage]</texture>
            <colordiffuse>$INFO[Skin.String(ViewDetailsListItemTextColor)]</colordiffuse>
            <visible>Window.IsActive(Home) + SubString(Skin.String(HomeLayout),simplever)</visible>
        </control>
    </include>
    
</includes>