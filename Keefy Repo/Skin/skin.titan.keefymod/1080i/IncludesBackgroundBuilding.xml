<?xml version="1.0" encoding="utf-8"?>
<includes>
	
	<!--Overlay-->
    <include name="DialogOverlay">
        <!--Dialog Overlay default-->
        <control type="image">
			<visible>[Skin.HasSetting(BackgroundOverlayMediaViewOnly) + !Window.IsActive(home)] | [Skin.HasSetting(BackgroundOverlayHomeOnly) + SubString(Window.Property(xmlfile),Home,left)] | [!Skin.HasSetting(BackgroundOverlayMediaViewOnly) + !Skin.HasSetting(BackgroundOverlayHomeOnly)]</visible>
			<include>DimensionsFullscreen</include>
			<texture>$VAR[ColorOverlayTexture]</texture>
			<include condition="Skin.String(BackgroundOverlayColor) + !Skin.String(BackgroundOverlayColor,None)">bgOverlayDiffuse</include>
			<visible>!Control.IsVisible(507)</visible>
            <visible>Skin.String(BackgroundOverlayTexture) + !Skin.String(BackgroundOverlayTexture, None)</visible>
		</control>
    </include>
	
	<variable name="ColorOverlayTexture">
		<value condition="!Skin.String(BackgroundOverlayTexture, Custom)">special://skin/extras/bgoverlays/$INFO[Skin.String(BackgroundOverlayTexture)].png</value>
		<value condition="Skin.String(BackgroundOverlayTexture, Custom)">$INFO[Skin.String(CustomBackgroundOverlayTexture)]</value>
   </variable>
   
    <include name="bgColorDiffuse">
        <colordiffuse>$INFO[Skin.String(BackgroundDiffuseColor)]</colordiffuse>
    </include>
    
    <include name="bgOverlayDiffuse">
        <colordiffuse>$INFO[Skin.String(BackgroundOverlayColor)]</colordiffuse>
    </include>
    
    <include name="DialogOverlayExtra">
		<!-- dim screen overlay used in certain dialogs -->
		<control type="image">
			<include>DimensionsFullscreen</include>
			<texture>special://skin/extras/bgoverlays/Default.png</texture>
			<colordiffuse>aawhite</colordiffuse>
            <visible>!Skin.String(BackgroundDiffuseColor.base)</visible>
		</control>
		<control type="image">
			<include>DimensionsFullscreen</include>
			<texture>special://skin/extras/bgoverlays/Default.png</texture>
			<colordiffuse>aa0f0f0f</colordiffuse>
            <visible>!Skin.String(BackgroundDiffuseColor.base)</visible>
		</control>
        <control type="image" description="panel behind bg">
            <include>DimensionsFullscreen</include>
            <texture>colors/color_white.png</texture>
            <colordiffuse>$INFO[Skin.String(BackgroundDiffuseColor.base)]</colordiffuse>
            <animation effect="fade" start="100" end="95" time="150" condition="true">Conditional</animation>
            <visible>Skin.String(BackgroundDiffuseColor.base)</visible>
        </control>
    </include>
	
	<include name="fanartSpeed5">
		<timeperimage>5000</timeperimage>
	</include>
	<include name="fanartSpeed6">
		<timeperimage>6000</timeperimage>
	</include>
	<include name="fanartSpeed8">
		<timeperimage>8000</timeperimage>
	</include>
	<include name="fanartSpeed10">
		<timeperimage>10000</timeperimage>
	</include>
	<include name="fanartSpeed15">
		<timeperimage>15000</timeperimage>
	</include>
	<include name="fanartSpeed20">
		<timeperimage>20000</timeperimage>
	</include>
	<include name="fanartSpeed30">
		<timeperimage>30000</timeperimage>
	</include>
	<include name="fanartSpeed60">
		<timeperimage>60000</timeperimage>
	</include>

    <include name="disabledFanart">
        <!-- disabled fanart per view -->
        <visible>
            ![Control.IsVisible(50) + Skin.HasSetting(View50_DisableFanArt)] + 
            ![Control.IsVisible(51) + Skin.HasSetting(View51_DisableFanArt)] + 
            ![Control.IsVisible(52) + Skin.HasSetting(View52_DisableFanArt)] + 
            ![Control.IsVisible(53) + Skin.HasSetting(View53_DisableFanArt)] + 
            ![Control.IsVisible(54) + Skin.HasSetting(View54_DisableFanArt)] + 
            ![Control.IsVisible(55) + Skin.HasSetting(View55_DisableFanArt)] + 
            ![Control.IsVisible(55) + Skin.HasSetting(View55_DisableFanArt)] + 
            ![Control.IsVisible(56) + Skin.HasSetting(View56_DisableFanArt)] + 
            ![Control.IsVisible(57) + Skin.HasSetting(View57_DisableFanArt)] + 
            ![Control.IsVisible(58) + Skin.HasSetting(View58_DisableFanArt)] + 
            ![Control.IsVisible(59) + Skin.HasSetting(View59_DisableFanArt)] + 
            ![Control.IsVisible(500) + Skin.HasSetting(View500_DisableFanArt)] + 
            ![Control.IsVisible(501) + Skin.HasSetting(View501_DisableFanArt)] + 
            ![Control.IsVisible(502) + Skin.HasSetting(View502_DisableFanArt)] + 
            ![Control.IsVisible(505) + Skin.HasSetting(View505_DisableFanArt)] + 
            ![Control.IsVisible(506) + Skin.HasSetting(View506_DisableFanArt)] + 
            ![Control.IsVisible(507) + Skin.HasSetting(View507_DisableFanArt)] + 
            ![Control.IsVisible(508) + Skin.HasSetting(View508_DisableFanArt)] + 
            ![Control.IsVisible(509) + Skin.HasSetting(View509_DisableFanArt)] + 
            ![Control.IsVisible(510) + Skin.HasSetting(View510_DisableFanArt)] + 
            ![Control.IsVisible(511) + Skin.HasSetting(View511_DisableFanArt)] + 
            ![Control.IsVisible(512) + Skin.HasSetting(View512_DisableFanArt)] + 
            ![Control.IsVisible(513) + Skin.HasSetting(View513_DisableFanArt)] + 
            ![Control.IsVisible(514) + Skin.HasSetting(View514_DisableFanArt)] + 
            ![Control.IsVisible(515) + Skin.HasSetting(View515_DisableFanArt)]
            </visible>
    </include>
    
	<!--Global Background -->
    <include name="GlobalBackground">
    
        <!-- background panel -->
        <control type="image" description="panel behind bg">
            <include>DimensionsFullscreen</include>
            <texture>colors/color_white.png</texture>
            <colordiffuse>$INFO[Skin.String(BackgroundDiffuseColor.base)]</colordiffuse>
            <visible>Skin.String(BackgroundDiffuseColor) + !Skin.String(BackgroundDiffuseColor, None)</visible>
        </control>
			
		<!-- global background -->
        <control type="multiimage" id="99004">
            <include>DimensionsFullscreen</include>
            <imagepath background="true" fallback="special://skin/extras/backgrounds/global_blue.jpg">$VAR[backgroundVar]</imagepath>
            <aspectratio>scale</aspectratio>
            <fadetime>350</fadetime>
            <include condition="Skin.String(BackgroundDiffuseColor) + !Skin.String(BackgroundDiffuseColor, None)">bgColorDiffuse</include>
            <include condition="skin.string(SkinHelper.RandomFanartDelay, 6)">fanartSpeed6</include>
            <include condition="skin.string(SkinHelper.RandomFanartDelay, 5)">fanartSpeed5</include>
			<include condition="skin.string(SkinHelper.RandomFanartDelay, 8)">fanartSpeed8</include>
			<include condition="skin.string(SkinHelper.RandomFanartDelay, 10)">fanartSpeed10</include>
			<include condition="skin.string(SkinHelper.RandomFanartDelay, 15)">fanartSpeed15</include>
			<include condition="skin.string(SkinHelper.RandomFanartDelay, 20)">fanartSpeed20</include>
            <include condition="skin.string(SkinHelper.RandomFanartDelay, 30)">fanartSpeed30</include>
            <include condition="skin.string(SkinHelper.RandomFanartDelay, 60)">fanartSpeed60</include>
            <randomize>true</randomize>
            <loop>yes</loop>
			<animation effect="zoom" start="110" end="130" center="auto" time="12000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(BackgroundAnimation)">Conditional</animation>
			<animation effect="slide" start="-10,-10" end="10,10" time="8000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(BackgroundAnimation)">Conditional</animation>
        </control>
         <!-- fanart image background (hidden with visibility conditions)-->
        <control type="image" id="99006">
            <left>-1</left>
            <top>-1</top>
            <width>1</width>
            <height>1</height>
            <texture background="true">$VAR[fanartBackground]</texture>
            <visible>!IsEmpty(Control.GetLabel(99006))</visible>
            <visible>Skin.HasSetting(ShowFanartBackground)</visible>
            <include condition="Window.IsMedia">disabledFanart</include>
        </control>
        <include condition="Skin.HasSetting(ShowFanartBackground) + Skin.HasSetting(SkinHelper.EnableExtraFanart)">extraFanartBackground</include>

        <include>DialogOverlay</include>
        
        <!-- Snow Effect -->
		<control type="group">
            <include condition="Skin.HasSetting(enablesnow) + [Window.IsActive(Home) | Skin.HasSetting(expandsnow)]">snow</include>
		</control>
        
        <!-- touchscreen workaround for windows tablets -->
		<include condition="Skin.HasSetting(EnableTouchSupport)">TouchScreenWorkaround</include>
        
     </include>
    
    <include name="extraFanartBackground">
         <control type="multiimage" id="99005">
            <left>-1</left>
            <top>-1</top>
            <width>1</width>
            <height>1</height>
            <imagepath background="true">$VAR[extraFanartBackground]</imagepath>
            <aspectratio>scale</aspectratio>
            <include condition="skin.string(extrafanartdelay, 6)">fanartSpeed6</include>
			<include condition="skin.string(extrafanartdelay, 8)">fanartSpeed8</include>
			<include condition="skin.string(extrafanartdelay, 10)">fanartSpeed10</include>
			<include condition="skin.string(extrafanartdelay, 15)">fanartSpeed15</include>
			<include condition="skin.string(extrafanartdelay, 20)">fanartSpeed20</include>
            <randomize>true</randomize>
			<include condition="Window.IsMedia">disabledFanart</include>
            <include condition="Window.IsMedia">disabledExtraFanart</include>
            <visible>Skin.HasSetting(SkinHelper.EnableExtraFanart)</visible>
            <!-- general visibility conditions -->
            <visible>!IsEmpty(Window(Home).Property(SkinHelper.ExtraFanArtPath)) | !IsEmpty(Window(Home).Property(SkinHelper.Music.ExtraFanArt)) | !IsEmpty(Window(Home).Property(SkinHelper.PVR.ExtraFanArt))</visible>
            <visible>![Window.IsActive(Home) + ![Control.HasFocus(1508) | Control.HasFocus(510) | Control.HasFocus(520) | Control.HasFocus(530) | Control.HasFocus(540)]]</visible>
        </control>
	</include>

    <include name="disabledFanart">
        <!-- disabled fanart per view -->
        <visible>
            ![Control.IsVisible(50) + Skin.HasSetting(View50_DisableFanArt)] + ![Control.IsVisible(51) + Skin.HasSetting(View51_DisableFanArt)] + 
            ![Control.IsVisible(52) + Skin.HasSetting(View52_DisableFanArt)] + ![Control.IsVisible(53) + Skin.HasSetting(View53_DisableFanArt)] + 
            ![Control.IsVisible(54) + Skin.HasSetting(View54_DisableFanArt)] + ![Control.IsVisible(55) + Skin.HasSetting(View55_DisableFanArt)] + 
            ![Control.IsVisible(55) + Skin.HasSetting(View55_DisableFanArt)] + ![Control.IsVisible(56) + Skin.HasSetting(View56_DisableFanArt)] + 
            ![Control.IsVisible(57) + Skin.HasSetting(View57_DisableFanArt)] + ![Control.IsVisible(58) + Skin.HasSetting(View58_DisableFanArt)] + 
            ![Control.IsVisible(59) + Skin.HasSetting(View59_DisableFanArt)] + ![Control.IsVisible(500) + Skin.HasSetting(View500_DisableFanArt)] + 
            ![Control.IsVisible(502) + Skin.HasSetting(View502_DisableFanArt)] + ![Control.IsVisible(505) + Skin.HasSetting(View505_DisableFanArt)] + 
            ![Control.IsVisible(506) + Skin.HasSetting(View506_DisableFanArt)] + ![Control.IsVisible(507) + Skin.HasSetting(View507_DisableFanArt)] + 
            ![Control.IsVisible(508) + Skin.HasSetting(View508_DisableFanArt)] + ![Control.IsVisible(509) + Skin.HasSetting(View509_DisableFanArt)] + 
            ![Control.IsVisible(510) + Skin.HasSetting(View510_DisableFanArt)] + ![Control.IsVisible(511) + Skin.HasSetting(View511_DisableFanArt)] + 
            ![Control.IsVisible(512) + Skin.HasSetting(View512_DisableFanArt)] + ![Control.IsVisible(513) + Skin.HasSetting(View513_DisableFanArt)] + 
            ![Control.IsVisible(514) + Skin.HasSetting(View514_DisableFanArt)] + ![Control.IsVisible(515) + Skin.HasSetting(View515_DisableFanArt)]
            </visible>
    </include>
    
    <include name="disabledExtraFanart">
        <!-- disabled fanart per view -->
        <visible>
            ![Control.IsVisible(50) + Skin.HasSetting(View50_DisableExtraFanArt)] + 
            ![Control.IsVisible(51) + Skin.HasSetting(View51_DisableExtraFanArt)] + 
            ![Control.IsVisible(52) + Skin.HasSetting(View52_DisableExtraFanArt)] + 
            ![Control.IsVisible(53) + Skin.HasSetting(View53_DisableExtraFanArt)] + 
            ![Control.IsVisible(54) + Skin.HasSetting(View54_DisableExtraFanArt)] + 
            ![Control.IsVisible(55) + Skin.HasSetting(View55_DisableExtraFanArt)] + 
            ![Control.IsVisible(55) + Skin.HasSetting(View55_DisableExtraFanArt)] + 
            ![Control.IsVisible(56) + Skin.HasSetting(View56_DisableExtraFanArt)] + 
            ![Control.IsVisible(57) + Skin.HasSetting(View57_DisableExtraFanArt)] + 
            ![Control.IsVisible(58) + Skin.HasSetting(View58_DisableExtraFanArt)] + 
            ![Control.IsVisible(59) + Skin.HasSetting(View59_DisableExtraFanArt)] + 
            ![Control.IsVisible(500) + Skin.HasSetting(View500_DisableExtraFanArt)] + 
            ![Control.IsVisible(502) + Skin.HasSetting(View502_DisableExtraFanArt)] + 
            ![Control.IsVisible(505) + Skin.HasSetting(View505_DisableExtraFanArt)] + 
            ![Control.IsVisible(506) + Skin.HasSetting(View506_DisableExtraFanArt)] + 
            ![Control.IsVisible(507) + Skin.HasSetting(View507_DisableExtraFanArt)] + 
            ![Control.IsVisible(508) + Skin.HasSetting(View508_DisableExtraFanArt)] + 
            ![Control.IsVisible(509) + Skin.HasSetting(View509_DisableExtraFanArt)] + 
            ![[Control.IsVisible(510) + !Window.IsActive(Home)] + Skin.HasSetting(View510_DisableExtraFanArt)] + 
            ![Control.IsVisible(511) + Skin.HasSetting(View511_DisableExtraFanArt)] + 
            ![Control.IsVisible(512) + Skin.HasSetting(View512_DisableExtraFanArt)] + 
            ![Control.IsVisible(513) + Skin.HasSetting(View513_DisableExtraFanArt)] + 
            ![Control.IsVisible(514) + Skin.HasSetting(View514_DisableExtraFanArt)] + 
            ![Control.IsVisible(515) + Skin.HasSetting(View515_DisableExtraFanArt)]
            </visible>
    </include>

    <variable name="fanartBackground">
        <!-- extendedinfo -->
        <value condition="Window.IsActive(script-ExtendedInfo Script-DialogVideoInfo.xml) + !IsEmpty(Window.Property(movie.FanArt))">$INFO[Window.Property(movie.FanArt)]</value>
        <value condition="Window.IsActive(script-ExtendedInfo Script-DialogInfo.xml) + !IsEmpty(Window(Home).Property(fanart))">$INFO[Window(home).Property(fanart)]</value>
        <value condition="Window.IsActive(script-ExtendedInfo Script-DialogInfo.xml) + !IsEmpty(Window.Property(actor.fanart))">$INFO[Window.Property(actor.fanart)]</value>
        <value condition="Window.IsActive(script-ExtendedInfo Script-DialogInfo.xml) + !IsEmpty(Container(750).ListItem.Property(Original))">$INFO[Container(750).ListItem.Property(Original)]</value>
        <value condition="Window.IsActive(script-ExtendedInfo Script-DialogInfo.xml) + !IsEmpty(Window.Property(actor.thumb))">$INFO[Window.Property(actor.thumb)]</value>
        <value condition="Window.IsActive(script-ExtendedInfo Script-VideoList.xml) + !IsEmpty(Container(500).ListItem.Property(Fanart_small))">$INFO[Container(500).ListItem.Property(Fanart_small)]</value>
 		<!--nextaired script backgrounds -->
		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(200) + !IsEmpty(Container(200).ListItem.Property(Fanart))">$INFO[Container(200).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(201) + !IsEmpty(Container(201).ListItem.Property(Fanart))">$INFO[Container(201).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(202) + !IsEmpty(Container(202).ListItem.Property(Fanart))">$INFO[Container(202).ListItem.Property(Fanart)]</value>
   		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(203) + !IsEmpty(Container(203).ListItem.Property(Fanart))">$INFO[Container(203).ListItem.Property(Fanart)]</value>
   		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(204) + !IsEmpty(Container(204).ListItem.Property(Fanart))">$INFO[Container(204).ListItem.Property(Fanart)]</value>
   		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(205) + !IsEmpty(Container(205).ListItem.Property(Fanart))">$INFO[Container(205).ListItem.Property(Fanart)]</value>
   		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(206) + !IsEmpty(Container(206).ListItem.Property(Fanart))">$INFO[Container(206).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(207) + !IsEmpty(Container(207).ListItem.Property(Fanart))">$INFO[Container(207).ListItem.Property(Fanart)]</value>
   		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(208) + !IsEmpty(Container(208).ListItem.Property(Fanart))">$INFO[Container(208).ListItem.Property(Fanart)]</value>
   		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(209) + !IsEmpty(Container(209).ListItem.Property(Fanart))">$INFO[Container(209).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(210) + !IsEmpty(Container(210).ListItem.Property(Fanart))">$INFO[Container(210).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(211) + !IsEmpty(Container(211).ListItem.Property(Fanart))">$INFO[Container(211).ListItem.Property(Fanart)]</value>
   		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(212) + !IsEmpty(Container(212).ListItem.Property(Fanart))">$INFO[Container(212).ListItem.Property(Fanart)]</value>
   		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(213) + !IsEmpty(Container(213).ListItem.Property(Fanart))">$INFO[Container(213).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(214) + !IsEmpty(Container(214).ListItem.Property(Fanart))">$INFO[Container(214).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Control.IsVisible(215) + !IsEmpty(Container(215).ListItem.Property(Fanart))">$INFO[Container(215).ListItem.Property(Fanart)]</value>
		
		<!-- custom search -->
		<value condition="Window.IsActive(script-skin_helper_service-CustomSearch.xml) + Control.HasFocus(3110) + !IsEmpty(Container(3110).ListItem.Art(fanart))">$INFO[Container(3110).ListItem.Art(fanart)]</value>
		<value condition="Window.IsActive(script-skin_helper_service-CustomSearch.xml) + Control.HasFocus(3111) + !IsEmpty(Container(3111).ListItem.Art(fanart))">$INFO[Container(3111).ListItem.Art(fanart)]</value>
		<value condition="Window.IsActive(script-skin_helper_service-CustomSearch.xml) + Control.HasFocus(3112) + !IsEmpty(Container(3112).ListItem.Art(tvshow.fanart))">$INFO[Container(3112).ListItem.Art(tvshow.fanart)]</value>
		<value condition="Window.IsActive(script-skin_helper_service-CustomInfo.xml) + !IsEmpty(Container(999).ListItem.Art(fanart))">$INFO[Container(999).ListItem.Art(fanart)]</value>
		<value condition="Window.IsActive(script-skin_helper_service-CustomInfo.xml) + !IsEmpty(Container(999).ListItem.Art(tvshow.fanart))">$INFO[Container(999).ListItem.Art(tvshow.fanart)]</value>
 		<!-- HOME widgets -->
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(510) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(510).ListItem.Art(fanart))">$INFO[Container(510).ListItem.Art(fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(510) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(510).ListItem.Art(tvshow.fanart))">$INFO[Container(510).ListItem.Art(tvshow.fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(510) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(510).ListItem.Property(fanart))">$INFO[Container(510).ListItem.Property(fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(520) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(520).ListItem.Art(fanart))">$INFO[Container(520).ListItem.Art(fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(520) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(520).ListItem.Art(tvshow.fanart))">$INFO[Container(520).ListItem.Art(tvshow.fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(520) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(520).ListItem.Property(fanart))">$INFO[Container(520).ListItem.Property(fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(530) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(530).ListItem.Art(fanart))">$INFO[Container(530).ListItem.Art(fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(530) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(530).ListItem.Art(tvshow.fanart))">$INFO[Container(530).ListItem.Art(tvshow.fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(530) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(530).ListItem.Property(fanart))">$INFO[Container(530).ListItem.Property(fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(540) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(540).ListItem.Art(fanart))">$INFO[Container(540).ListItem.Art(fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(540) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(540).ListItem.Art(tvshow.fanart))">$INFO[Container(540).ListItem.Art(tvshow.fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(540) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(540).ListItem.Property(fanart))">$INFO[Container(540).ListItem.Property(fanart)]</value>
        <value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(550) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(550).ListItem.Art(fanart))">$INFO[Container(550).ListItem.Art(fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(550) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(550).ListItem.Art(tvshow.fanart))">$INFO[Container(550).ListItem.Art(tvshow.fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(550) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(550).ListItem.Property(fanart))">$INFO[Container(550).ListItem.Property(fanart)]</value>
        <value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(560) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(560).ListItem.Art(fanart))">$INFO[Container(560).ListItem.Art(fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(560) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(560).ListItem.Art(tvshow.fanart))">$INFO[Container(560).ListItem.Art(tvshow.fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(560) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(560).ListItem.Property(fanart))">$INFO[Container(560).ListItem.Property(fanart)]</value>
        <value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(570) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(570).ListItem.Art(fanart))">$INFO[Container(570).ListItem.Art(fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(570) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(570).ListItem.Art(tvshow.fanart))">$INFO[Container(570).ListItem.Art(tvshow.fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(570) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(570).ListItem.Property(fanart))">$INFO[Container(570).ListItem.Property(fanart)]</value>
        <value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(580) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(580).ListItem.Art(fanart))">$INFO[Container(580).ListItem.Art(fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(580) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(580).ListItem.Art(tvshow.fanart))">$INFO[Container(580).ListItem.Art(tvshow.fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(580) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(580).ListItem.Property(fanart))">$INFO[Container(580).ListItem.Property(fanart)]</value>
        <value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(590) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(590).ListItem.Art(fanart))">$INFO[Container(590).ListItem.Art(fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(590) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(590).ListItem.Art(tvshow.fanart))">$INFO[Container(590).ListItem.Art(tvshow.fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(590) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(590).ListItem.Property(fanart))">$INFO[Container(590).ListItem.Property(fanart)]</value>
        <value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(600) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(600).ListItem.Art(fanart))">$INFO[Container(600).ListItem.Art(fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(600) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(600).ListItem.Art(tvshow.fanart))">$INFO[Container(600).ListItem.Art(tvshow.fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(600) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(600).ListItem.Property(fanart))">$INFO[Container(600).ListItem.Property(fanart)]</value>
        <value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(610) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(610).ListItem.Art(fanart))">$INFO[Container(610).ListItem.Art(fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(610) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(610).ListItem.Art(tvshow.fanart))">$INFO[Container(610).ListItem.Art(tvshow.fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(610) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(610).ListItem.Property(fanart))">$INFO[Container(610).ListItem.Property(fanart)]</value>
        <value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(611) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(611).ListItem.Art(fanart))">$INFO[Container(611).ListItem.Art(fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(611) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(611).ListItem.Art(tvshow.fanart))">$INFO[Container(611).ListItem.Art(tvshow.fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(611) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(611).ListItem.Property(fanart))">$INFO[Container(611).ListItem.Property(fanart)]</value>
        <value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(612) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(612).ListItem.Art(fanart))">$INFO[Container(612).ListItem.Art(fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(612) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(612).ListItem.Art(tvshow.fanart))">$INFO[Container(612).ListItem.Art(tvshow.fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(612) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(612).ListItem.Property(fanart))">$INFO[Container(612).ListItem.Property(fanart)]</value>
        <value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(613) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(613).ListItem.Art(fanart))">$INFO[Container(613).ListItem.Art(fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(613) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(613).ListItem.Art(tvshow.fanart))">$INFO[Container(613).ListItem.Art(tvshow.fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(613) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(613).ListItem.Property(fanart))">$INFO[Container(613).ListItem.Property(fanart)]</value>
        <value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(614) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(614).ListItem.Art(fanart))">$INFO[Container(614).ListItem.Art(fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(614) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(614).ListItem.Art(tvshow.fanart))">$INFO[Container(614).ListItem.Art(tvshow.fanart)]</value>
		<value condition="[Window.IsActive(Home) | !IsEmpty(Window(Home).Property(netflixview))] + [Control.HasFocus(614) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(614).ListItem.Property(fanart))">$INFO[Container(614).ListItem.Property(fanart)]</value>
        <value condition="Window.IsActive(Home) + [Control.HasFocus(1508) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(1508).ListItem.Art(fanart))">$INFO[Container(1508).ListItem.Art(fanart)]</value>
		<value condition="Window.IsActive(Home) + [Control.HasFocus(1508) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(1508).ListItem.Art(tvshow.fanart))">$INFO[Container(1508).ListItem.Art(tvshow.fanart)]</value>
		<value condition="Window.IsActive(Home) + [Control.HasFocus(1508) + Skin.HasSetting(ShowFanartBackground)] + !IsEmpty(Container(1508).ListItem.Property(fanart))">$INFO[Container(1508).ListItem.Property(fanart)]</value>
		
        <!-- widget fanart as shortcut background -->
        <value condition="Window.IsActive(Home) + StringCompare(Container(300).ListItem.Property(Background),widgetfanart) + !IsEmpty(Container(1508).ListItem.Art(fanart)) + Control.IsVisible(1508)">$INFO[Container(1508).ListItem.Art(fanart)]</value>
		<value condition="Window.IsActive(Home) + StringCompare(Container(300).ListItem.Property(Background),widgetfanart) + !IsEmpty(Container(1508).ListItem.Art(tvshow.fanart)) + Control.IsVisible(1508)">$INFO[Container(1508).ListItem.Art(tvshow.fanart)]</value>
		<value condition="Window.IsActive(Home) + StringCompare(Container(300).ListItem.Property(Background),widgetfanart) + !IsEmpty(Container(1508).ListItem.Property(fanart)) + Control.IsVisible(1508)">$INFO[Container(1508).ListItem.Property(fanart)]</value>
        <value condition="Window.IsActive(Home) + StringCompare(Container(300).ListItem.Property(Background),widgetfanart) + !IsEmpty(Container(510).ListItem.Art(fanart)) + Control.IsVisible(510)">$INFO[Container(510).ListItem.Art(fanart)]</value>
		<value condition="Window.IsActive(Home) + StringCompare(Container(300).ListItem.Property(Background),widgetfanart) + !IsEmpty(Container(510).ListItem.Art(tvshow.fanart)) + Control.IsVisible(510)">$INFO[Container(510).ListItem.Art(tvshow.fanart)]</value>
		<value condition="Window.IsActive(Home) + StringCompare(Container(300).ListItem.Property(Background),widgetfanart) + !IsEmpty(Container(510).ListItem.Property(fanart)) + Control.IsVisible(510)">$INFO[Container(510).ListItem.Property(fanart)]</value>
 		<value condition="Window.IsActive(Home) + StringCompare(Container(300).ListItem.Property(Background),widgetfanart) + !IsEmpty(Container(520).ListItem.Art(fanart)) + Control.IsVisible(520)">$INFO[Container(520).ListItem.Art(fanart)]</value>
		<value condition="Window.IsActive(Home) + StringCompare(Container(300).ListItem.Property(Background),widgetfanart) + !IsEmpty(Container(520).ListItem.Art(tvshow.fanart)) + Control.IsVisible(520)">$INFO[Container(520).ListItem.Art(tvshow.fanart)]</value>
		<value condition="Window.IsActive(Home) + StringCompare(Container(300).ListItem.Property(Background),widgetfanart) + !IsEmpty(Container(520).ListItem.Property(fanart)) + Control.IsVisible(520)">$INFO[Container(520).ListItem.Property(fanart)]</value>
 		<value condition="Window.IsActive(Home) + StringCompare(Container(300).ListItem.Property(Background),widgetfanart) + !IsEmpty(Container(530).ListItem.Art(fanart)) + Control.IsVisible(530)">$INFO[Container(530).ListItem.Art(fanart)]</value>
		<value condition="Window.IsActive(Home) + StringCompare(Container(300).ListItem.Property(Background),widgetfanart) + !IsEmpty(Container(530).ListItem.Art(tvshow.fanart)) + Control.IsVisible(530)">$INFO[Container(530).ListItem.Art(tvshow.fanart)]</value>
		<value condition="Window.IsActive(Home) + StringCompare(Container(300).ListItem.Property(Background),widgetfanart) + !IsEmpty(Container(530).ListItem.Property(fanart)) + Control.IsVisible(530)">$INFO[Container(530).ListItem.Property(fanart)]</value>
 		<value condition="Window.IsActive(Home) + StringCompare(Container(300).ListItem.Property(Background),widgetfanart) + !IsEmpty(Container(540).ListItem.Art(fanart)) + Control.IsVisible(540)">$INFO[Container(540).ListItem.Art(fanart)]</value>
		<value condition="Window.IsActive(Home) + StringCompare(Container(300).ListItem.Property(Background),widgetfanart) + !IsEmpty(Container(540).ListItem.Art(tvshow.fanart)) + Control.IsVisible(540)">$INFO[Container(540).ListItem.Art(tvshow.fanart)]</value>
		<value condition="Window.IsActive(Home) + StringCompare(Container(300).ListItem.Property(Background),widgetfanart) + !IsEmpty(Container(540).ListItem.Property(fanart)) + Control.IsVisible(540)">$INFO[Container(540).ListItem.Property(fanart)]</value>
 		
        <!-- normal fanart backgrounds -->
		<value condition="!IsEmpty(ListItem.PicturePath)">$INFO[ListItem.PicturePath]</value>
		<value condition="!IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!IsEmpty(Container.Art(tvshow.fanart))">$INFO[Container.Art(tvshow.fanart)]</value>
        <value condition="!IsEmpty(Window(home).Property(SkinHelper.Music.FanArt))">$INFO[Window(home).Property(SkinHelper.Music.FanArt)]</value>
		<value condition="!IsEmpty(Container.Art(artist.fanart))">$INFO[Container.Art(artist.fanart)]</value>
		<value condition="!IsEmpty(Container.Art(albumartist.fanart))">$INFO[Container.Art(albumartist.fanart)]</value>
		<value condition="!IsEmpty(Window(home).Property(SkinHelper.PVR.FanArt))">$INFO[Window(home).Property(SkinHelper.PVR.FanArt)]</value>
   </variable>
    
	<variable name="backgroundVar">
    
        <value condition="[Window.IsActive(LoginScreen.xml) | Window.IsActive(StartUp.xml)] + Skin.String(LoginBackground)">$INFO[Skin.String(LoginBackground)]</value>
         <!-- fanart background -->
        <value condition="Control.IsVisible(99005) + !IsEmpty(Control.GetLabel(99005))">$INFO[Control.GetLabel(99005)]</value>
        <value condition="Control.IsVisible(99006)">$INFO[Control.GetLabel(99006)]</value>
         <!-- conditional background override -->
        <value condition="!IsEmpty(Window(home).Property(SkinHelper.ConditionalBackground))">$INFO[Window(home).Property(SkinHelper.ConditionalBackground)]</value>
 		<!-- weather fanart -->
		<value condition="Window.IsActive(MyWeather.xml)">$INFO[Skin.String(WeatherFanArtPack.path)]$INFO[Window(Weather).Property(Current.fanartCode)]$VAR[WeatherFanArtExtension]</value>	
 		<!-- section backgrounds when skinshortcuts dialog active -->
		<value condition="Skin.HasSetting(UseSectionBackground) + !IsEmpty(Container(211).ListItem.Property(Background))">$INFO[Container(211).ListItem.Property(Background)]</value>
		
		<!-- section backgrounds when home active -->
        <value condition="Skin.HasSetting(UseSectionBackground) + !IsEmpty(Container(4444).ListItem.Property(Background)) + Control.HasFocus(4444)">$INFO[Container(4444).ListItem.Property(Background)]</value>
		<value condition="Skin.HasSetting(UseSectionBackground) + !IsEmpty(Container(300).ListItem.Property(Background))">$INFO[Container(300).ListItem.Property(Background)]</value>
		
		<!-- section background when home not active -->
		<value condition="Skin.HasSetting(UseSectionBackground) + !IsEmpty(Window(home).Property(SectionBackground)) + !Window.IsActive(script-skinshortcuts.xml) + !Window.IsActive(home)">$INFO[Window(home).Property(SectionBackground)]</value>
		
		<!-- global weather background -->
		<value condition="Skin.String(CustomBackgroundSetting, weather)">$INFO[Skin.String(WeatherFanArtPack.path)]$INFO[Window(Weather).Property(Current.fanartCode)]$VAR[WeatherFanArtExtension]</value>
		<!-- global background: global fanart -->
		<value condition="Skin.String(CustomBackgroundSetting, fanart)">$INFO[Window(Home).Property(SkinHelper.GlobalFanartBackground)]</value>
        <!-- global background: movies -->
		<value condition="Skin.String(CustomBackgroundSetting, movies)">$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</value>
        <!-- global background: tvshows -->
		<value condition="Skin.String(CustomBackgroundSetting, tvshows)">$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground)]</value>
        <!-- global background: pictures -->
		<value condition="Skin.String(CustomBackgroundSetting, pictures)">$INFO[Window(Home).Property(SkinHelper.PicturesBackground)]</value>
        <!-- global background: videos -->
		<value condition="Skin.String(CustomBackgroundSetting, videos)">$INFO[Window(Home).Property(SkinHelper.AllVideosBackground)]</value> 
        <!-- global background: movieswall -->
		<value condition="Skin.String(CustomBackgroundSetting, movieswall)">$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground.Wall)]</value>        
        <!-- global background: default -->
        <value condition="Skin.String(CustomBackgroundSetting, default) + skin.hastheme(classic)">special://skin/extras/backgrounds/global.jpg</value>
		<value condition="Skin.String(CustomBackgroundSetting, default)">special://skin/extras/backgrounds/global_blue.jpg</value>
        <!-- global background custom-->
		<value condition="Skin.String(CustomBackgroundSetting)">$INFO[Skin.String(CustomBackgroundSetting)]</value>
   </variable>
    
    <variable name="extraFanartBackground">
		<!-- extra fanart backgrounds -->
		<value condition="Skin.HasSetting(SkinHelper.EnableExtraFanart) + !IsEmpty(Window(Home).Property(SkinHelper.ExtraFanArtPath))">$INFO[Window(Home).Property(SkinHelper.ExtraFanArtPath)]</value>
		<value condition="Skin.HasSetting(SkinHelper.EnableExtraFanart) + !IsEmpty(Window(Home).Property(SkinHelper.Music.ExtraFanArt))">$INFO[Window(Home).Property(SkinHelper.Music.ExtraFanArt)]</value>
        <value condition="Skin.HasSetting(SkinHelper.EnableExtraFanart) + !IsEmpty(Window(Home).Property(SkinHelper.PVR.ExtraFanArt))">$INFO[Window(Home).Property(SkinHelper.PVR.ExtraFanArt)]</value>
        <value>-</value>
   </variable>

   	
</includes>